<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examples | Análisis Estadístico en R</title>
    <link>/example/</link>
      <atom:link href="/example/index.xml" rel="self" type="application/rss+xml" />
    <description>Examples</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><lastBuildDate>Mon, 08 Nov 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/logo_hu02bc8dfe7cae86b2ee03430b67caeaf2_22353_300x300_fit_lanczos_2.png</url>
      <title>Examples</title>
      <link>/example/</link>
    </image>
    
    <item>
      <title>Calidad de modelos y otras técnicas de estimación</title>
      <link>/example/11-practico/</link>
      <pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/example/11-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/11-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Regresiones logísticas, exponenciación y representación gráfica</title>
      <link>/example/10-practico/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/example/10-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/10-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Regresiones lineales, predictores categóricos y representación gráfica</title>
      <link>/example/09-practico/</link>
      <pubDate>Mon, 18 Oct 2021 00:00:00 +0000</pubDate>
      <guid>/example/09-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/09-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Muestras complejas</title>
      <link>/example/07-practico/</link>
      <pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate>
      <guid>/example/07-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/07-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Análisis descriptivo</title>
      <link>/example/06-practico/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      <guid>/example/06-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/06-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Transformación de datos en tidydata</title>
      <link>/example/05-practico/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      <guid>/example/05-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/05-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tranformar y seleccionar variables</title>
      <link>/example/04-practico/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/example/04-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/04-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The ultimate guide to generating synthetic data for causal inference</title>
      <link>/example/01-datos/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/example/01-datos/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;/example/random-numbers/&#34;&gt;example guide for generating random numbers&lt;/a&gt;, we explored how to use a bunch of different statistical distributions to create variables that had reasonable values. However, each of the columns that we generated there were completely independent of each other. In the final example, we made some data with columns like age, education, and income, but none of those were related, though in real life they would be.&lt;/p&gt;
&lt;p&gt;Generating random variables is fairly easy: choose some sort of distributional shape, set parameters like a mean and standard deviation, and let randomness take over. Forcing variables to be related is a little trickier and involves a little math. But don&amp;rsquo;t worry! That math is all just regression stuff!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(broom)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(patchwork)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(scales)
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;basic-example&#34;&gt;Basic example&lt;/h2&gt;
&lt;h3 id=&#34;relationships-and-regression&#34;&gt;Relationships and regression&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s pretend we want to predict someone&amp;rsquo;s happiness on a 10-point scale based on the number of cookies they&amp;rsquo;ve eaten and whether or not their favorite color is blue.&lt;/p&gt;
&lt;p&gt;$$
\text{Happiness} = \beta_0 + \beta_1 \text{Cookies eaten} + \beta_2 \text{Favorite color is blue} + \varepsilon
$$&lt;/p&gt;
&lt;p&gt;We can generate a fake dataset with columns for happiness (Beta distribution clustered around 7ish), cookies (Poisson distribution), and favorite color (binomial distribution for blue/not blue):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
happiness_simple &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  happiness &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
  cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpois&lt;/span&gt;(n_people, lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
  color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust some of the columns&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
         cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
         color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fct_relevel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(color_blue), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;))

&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness_simple)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness cookies color_blue&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;     &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1       8.7       2 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2       6.5       2 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3       4.8       2 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4       9.6       3 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5       6.2       1 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6       6.1       2 Blue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have a neat dataset now, so let&amp;rsquo;s run a regression. Is eating more cookies or liking blue associated with greater happiness?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_happiness1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_simple)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_happiness1)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)     7.06       0.105     67.0     0    &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies        -0.00884    0.0419    -0.211   0.833&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue -0.0202     0.0861    -0.235   0.815&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Not really. The coefficients for both &lt;code&gt;cookies&lt;/code&gt; and &lt;code&gt;color_blueBlue&lt;/code&gt; are basically 0 and not statistically significant. That makes sense since the three columns are completely independent of each other. If there were any significant effects, that&amp;rsquo;d be strange and solely because of random chance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For the sake of your final project, you can just leave all the columns completely independent of each other if you want.&lt;/strong&gt; None of your results will be significant and you won&amp;rsquo;t see any effects anywhere, but you can still build models, run all the pre-model diagnostics, and create graphs and tables based on this data.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;HOWEVER&lt;/strong&gt;&lt;/em&gt;, it will be far more useful to you if you generate relationships. The whole goal of this class is to find causal effects in observational, non-experimental data. If you can generate synthetic non-experimental data and bake in a known causal effect, you can know if your different methods for recovering that effect are working.&lt;/p&gt;
&lt;p&gt;So how do we bake in correlations and causal effects?&lt;/p&gt;
&lt;h3 id=&#34;explanatory-variables-linked-to-outcome-no-connection-between-explanatory-variables&#34;&gt;Explanatory variables linked to outcome; no connection between explanatory variables&lt;/h3&gt;
&lt;p&gt;To help with the intuition of how to link these columns, think about the model we&amp;rsquo;re building:&lt;/p&gt;
&lt;p&gt;$$
\text{Happiness} = \beta_0 + \beta_1 \text{Cookies eaten} + \beta_2 \text{Favorite color is blue} + \varepsilon
$$&lt;/p&gt;
&lt;p&gt;This model provides estimates for all those betas. Throughout the semester, we&amp;rsquo;ve used the analogy of sliders and switches to describe regression coefficients. Here we have both:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\(\beta_0\)&lt;/code&gt;: The average baseline happiness.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\beta_1\)&lt;/code&gt;: The additional change in happiness that comes from eating one cookie. This is a &lt;em&gt;slider&lt;/em&gt;: move cookies up by one and happiness changes by &lt;code&gt;\(\beta_1\)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\beta_2\)&lt;/code&gt;: The change in happiness that comes from having your favorite color be blue. This is a &lt;em&gt;switch&lt;/em&gt;: turn on &amp;ldquo;blue&amp;rdquo; for someone and their happiness changes by &lt;code&gt;\(\beta_2\)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can invent our own coefficients and use some math to build them into the dataset. Let&amp;rsquo;s use these numbers as our targets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\(\beta_0\)&lt;/code&gt;: Average happiness is 7&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\beta_1\)&lt;/code&gt;: Eating one more cookie boosts happiness by 0.25 points&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\(\beta_2\)&lt;/code&gt;: People who like blue have 0.75 higher happiness&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When generating the data, we can&amp;rsquo;t just use &lt;code&gt;rbeta()&lt;/code&gt; by itself to generate happiness, since happiness depends on both cookies and favorite color (that&amp;rsquo;s why we call it a dependent variable). To build in this effect, we can add a new column that uses math and modifies the underlying &lt;code&gt;rbeta()&lt;/code&gt;-based happiness score:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness_with_effect &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; happiness_simple &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn the categorical favorite color column into TRUE/FALSE so we can do math with it&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(color_blue_binary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(color_blue &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make a new happiness column that uses coefficients for cookies and favorite color&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_modified &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; cookies) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary))
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness_with_effect)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness cookies color_blue color_blue_binary happiness_modified&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;lgl&amp;gt;                          &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1       8.7       2 Blue       TRUE                            9.95&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2       6.5       2 Not blue   FALSE                           7   &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3       4.8       2 Blue       TRUE                            6.05&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4       9.6       3 Not blue   FALSE                          10.4 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5       6.2       1 Not blue   FALSE                           6.45&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6       6.1       2 Blue       TRUE                            7.35&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now that we have a new &lt;code&gt;happiness_modified&lt;/code&gt; column we can run a model using it as the outcome:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_happiness2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness_modified &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_with_effect)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_happiness2)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       7.06     0.105      67.0  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies           0.241    0.0419      5.76 1.13e- 8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue    0.730    0.0861      8.48 8.25e-17&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Whoa! Look at those coefficients! They&amp;rsquo;re exactly what we tried to build in! The baseline happiness (intercept) is ≈7, eating one cookie is associated with a ≈0.25 increase in happiness, and liking blue is associated with a ≈0.75 increase in happiness.&lt;/p&gt;
&lt;p&gt;However, we originally said that happiness was a 0-10 point scale. After boosting it with extra happiness for cookies and liking blue, there are some people who score higher than 10:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Original scale&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(happiness_with_effect, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_continuous&lt;/span&gt;(breaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_cartesian&lt;/span&gt;(xlim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/happiness-dist-normal-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Scaled up&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(happiness_with_effect, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_modified)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_continuous&lt;/span&gt;(breaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_cartesian&lt;/span&gt;(xlim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/happiness-dist-scaled-up-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;To fix that, we can use the &lt;code&gt;rescale()&lt;/code&gt; function from the &lt;strong&gt;scales&lt;/strong&gt; package to force the new &lt;code&gt;happiness_modified&lt;/code&gt; variable to fit back in its original range:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness_with_effect &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; happiness_with_effect &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_rescaled &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(happiness_modified, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)))

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(happiness_with_effect, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_rescaled)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;scale_x_continuous&lt;/span&gt;(breaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;coord_cartesian&lt;/span&gt;(xlim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/happiness-scaled-down-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Everything is back in the 3–10 range now. However, the rescaling also rescaled our built-in effects. Look what happens if we use the &lt;code&gt;happiness_rescaled&lt;/code&gt; in the model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_happiness3 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness_rescaled &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_with_effect)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_happiness3)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       6.34     0.0910     69.6  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies           0.208    0.0362      5.76 1.13e- 8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue    0.631    0.0744      8.48 8.25e-17&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the baseline happiness is 6.3, the cookies effect is 0.2, and the blue effect is 0.63. These effects shrunk because we shrunk the data back down to have a maximum of 10.&lt;/p&gt;
&lt;p&gt;There are probably fancy mathy ways to rescale data &lt;em&gt;and&lt;/em&gt; keep the coefficients the same size, but rather than figure that out (who even wants to do that?!), my strategy is just to play with numbers until the results look good. Instead of using a 0.25 cookie effect and 0.75 blue effect, I make those effects bigger so that the rescaled version is roughly what I really want. There&amp;rsquo;s no systematic way to do this—I ran this chunk below a bunch of times until the numbers worked.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
happiness_real_effect &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
  cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpois&lt;/span&gt;(n_people, lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
  color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust some of the columns&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
         cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
         color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fct_relevel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(color_blue), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn the categorical favorite color column into TRUE/FALSE so we can do math with it&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(color_blue_binary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(color_blue &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make a new happiness column that uses coefficients for cookies and favorite color&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.31&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; cookies) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Cookie effect&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.91&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Blue effect&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale to 3-10, since that&amp;#39;s what the original happiness column looked like&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(happiness_effect, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)))

model_does_this_work_yet &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_real_effect)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_does_this_work_yet)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       6.15     0.0886     69.4  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies           0.253    0.0352      7.19 1.25e-12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue    0.749    0.0724     10.3  7.44e-24&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There&amp;rsquo;s nothing magical about the 0.31 and 0.91 numbers I used here; I just kept changing those to different things until the regression coefficients ended up at ≈0.25 and ≈0.75. Also, I gave up on trying to make the baseline happiness 7. It&amp;rsquo;s possible to do—you&amp;rsquo;d just need to also shift the underlying Beta distribution up (like &lt;code&gt;shape1 = 9, shape2 = 2&lt;/code&gt; or something). But then you&amp;rsquo;d also need to change the coefficients more. You&amp;rsquo;ll end up with 3 moving parts and it can get complicated, so I don&amp;rsquo;t worry too much about it, since what we care about the most here is the effect of cookies and favorite color, not baseline levels of happiness.&lt;/p&gt;
&lt;p&gt;Phew. We successfully connected cookies and favorite color to happiness and we have effects that are measurable with regression! One last thing that I would do is get rid of some of the intermediate columns like &lt;code&gt;color_blue_binary&lt;/code&gt; or &lt;code&gt;happiness_effect&lt;/code&gt;—we only used those for the behind-the-scenes math of creating the effect. Here&amp;rsquo;s our final synthetic dataset:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; happiness_real_effect &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, happiness, cookies, color_blue)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness cookies color_blue&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;     &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1      8.81       2 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2      6.20       2 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3      5.53       2 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4      9.07       3 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5      5.68       1 Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6      6.63       2 Blue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can save that as a CSV file with &lt;code&gt;write_csv()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(happiness, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/happiness_fake_data.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;explanatory-variables-linked-to-outcome-connection-between-explanatory-variables&#34;&gt;Explanatory variables linked to outcome; connection between explanatory variables&lt;/h3&gt;
&lt;p&gt;In that cookie example, we assumed that both cookie consumption and favorite color are associated with happiness. We also assumed that cookie consumption and favorite color are &lt;em&gt;not&lt;/em&gt; related to each other. But what if they are? What if people who like blue eat more cookies?&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve already used regression-based math to connect explanatory variables to outcome variables. We can use that same intuition to connect explanatory variables to each other.&lt;/p&gt;
&lt;p&gt;The easiest way to think about this is with DAGs. Here&amp;rsquo;s the DAG for the model we just ran:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness_dag1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cook &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; blue,
                         coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, cook &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                                       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, cook &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(happiness_dag1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/happiness-dag-rct-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Both cookies and favorite color cause happiness, but there&amp;rsquo;s no link between them. Notice that &lt;code&gt;dagify()&lt;/code&gt; uses the same model syntax that &lt;code&gt;lm()&lt;/code&gt; does: &lt;code&gt;hap ~ cook + blue&lt;/code&gt;. If we think of this just like a regression model, we can pretend that there are coefficients there too: &lt;code&gt;hap ~ 0.25*cook + 0.75*blue&lt;/code&gt;. We don&amp;rsquo;t actually include any coefficients in the DAG or anything, but it helps with the intuition.&lt;/p&gt;
&lt;p&gt;But what if people who like blue eat more cookies on average? For whatever reason, let&amp;rsquo;s pretend that liking blue causes you to eat 0.5 more cookies, on average. Here&amp;rsquo;s the new DAG:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness_dag2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cook &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; blue,
                         cook &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; blue,
                         coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, cook &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                                       y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(hap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, cook &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(happiness_dag2) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/happiness-dag-confounding-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we have two different equations: &lt;code&gt;hap ~ cook + blue&lt;/code&gt; and &lt;code&gt;cook ~ blue&lt;/code&gt;. Conveniently, these both translate to models, and we know the coefficients we want!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hap ~ 0.25*cook + 0.75*blue&lt;/code&gt;: This is what we built before—cookies boost happiness by 0.25 and liking blue boosts happiness by 0.75&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cook ~ 0.3*blue&lt;/code&gt;: This is what we just proposed—liking blue boosts cookies by 0.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can follow the same process we did when building the cookie and blue effects into happiness to also build a blue effect into cookies!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
happiness_cookies_blue &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
  cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpois&lt;/span&gt;(n_people, lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
  color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust some of the columns&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
         cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
         color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fct_relevel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(color_blue), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn the categorical favorite color column into TRUE/FALSE so we can do math with it&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(color_blue_binary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(color_blue &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make blue have an effect on cookie consumption&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make a new happiness column that uses coefficients for cookies and favorite color&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.31&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; cookies) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Cookie effect&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.91&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Blue effect&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale to 3-10, since that&amp;#39;s what the original happiness column looked like&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(happiness_effect, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness_cookies_blue)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness_baseline cookies color_blue color_blue_binary happiness_effect happiness&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;              &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;lgl&amp;gt;                        &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1                8.7     2.5 Blue       TRUE                         10.4       8.84&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2                6.5     2   Not blue   FALSE                         7.12      6.14&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3                4.8     2.5 Blue       TRUE                          6.48      5.61&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4                9.6     3   Not blue   FALSE                        10.5       8.96&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5                6.2     1   Not blue   FALSE                         6.51      5.63&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6                6.1     2.5 Blue       TRUE                          7.78      6.69&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Notice now that people who like blue eat partial cookies, as expected. We can verify that there&amp;rsquo;s a relationship between liking blue and cookies by running a model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(cookies &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_cookies_blue) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       2.07     0.0451     45.9  3.51e-248&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 color_blueBlue    0.460    0.0651      7.07 2.96e- 12&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Yep. Liking blue is associated with 0.46 more cookies on average (it&amp;rsquo;s not quite 0.5, but that&amp;rsquo;s because of randomness).&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s do some neat DAG magic. Let&amp;rsquo;s say we&amp;rsquo;re interested in the causal effect of cookies on happiness. We could run a naive model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_happiness_naive &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_cookies_blue)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_happiness_naive)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)    6.27     0.0894     70.1  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies        0.325    0.0354      9.18 2.40e-19&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on this, eating a cookie causes you to have 0.325 more happiness points. But that&amp;rsquo;s wrong! Liking the color blue is a confounder and opens a path between cookies and happiness. You can see the confounding both in the DAG (since blue points to both the cookie node and the happiness node) and in the math (liking blue boosts happiness + liking blue boosts cookie consumption, which boosts happiness).&lt;/p&gt;
&lt;p&gt;To fix this confounding, we need to statistically adjust for liking blue and close the backdoor path. Ordinarily we&amp;rsquo;d do this with something like &lt;a href=&#34;/example/matching-ipw/&#34;&gt;matching or inverse probability weighting&lt;/a&gt;, but here we can just include liking blue as a control variable (since it&amp;rsquo;s linearly related to both cookies and happiness):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_happiness_ate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_cookies_blue)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_happiness_ate)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       6.09     0.0870     70.0  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies           0.249    0.0346      7.19 1.25e-12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue    0.739    0.0729     10.1  4.70e-23&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After adjusting for backdoor confounding, eating one additional cookie &lt;em&gt;causes&lt;/em&gt; a 0.249 point increase in happiness. This is the effect we originally built into the data!&lt;/p&gt;
&lt;p&gt;If you wanted, we could rescale the number of cookies just like we rescaled happiness before, since sometimes adding effects to columns changes their reasonable ranges.&lt;/p&gt;
&lt;p&gt;Now that we have a good working dataset, we can keep the columns we care about and save it as a CSV file for later use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;happiness &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; happiness_cookies_blue &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, happiness, cookies, color_blue)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness cookies color_blue&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;     &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1      8.84     2.5 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2      6.14     2   Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3      5.61     2.5 Blue      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4      8.96     3   Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5      5.63     1   Not blue  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6      6.69     2.5 Blue&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(happiness, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/happiness_fake_data.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;adding-extra-noise&#34;&gt;Adding extra noise&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;ve got columns that follow specific distributions, and we&amp;rsquo;ve got columns that are statistically related to each other. We can add one more wrinkle to make our fake data even more fun (and even more reflective of real life). We can add some noise.&lt;/p&gt;
&lt;p&gt;Right now, the effects we&amp;rsquo;re finding are &lt;em&gt;too&lt;/em&gt; perfect. When we used &lt;code&gt;mutate()&lt;/code&gt; to add a 0.25 boost in happiness for every cookie people ate, we added &lt;em&gt;exactly&lt;/em&gt; 0.25 happiness points. If someone ate 2 cookies, they got 0.5 more happiness; if they ate 5, they got 1.25 more.&lt;/p&gt;
&lt;p&gt;What if the cookie effect isn&amp;rsquo;t exactly 0.25, but somewhere &lt;em&gt;around&lt;/em&gt; 0.25? For some people it&amp;rsquo;s 0.1, for others it&amp;rsquo;s 0.3, for others it&amp;rsquo;s 0.22. We can use the same ideas we talked about in the &lt;a href=&#34;/example/random-numbers/&#34;&gt;random numbers example&lt;/a&gt; to generate a &lt;em&gt;distribution&lt;/em&gt; of an effect. For instance, let&amp;rsquo;s say that the average cookie effect is 0.25, but it can vary somewhat with a standard deviation of 0.15:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;temp_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.15&lt;/span&gt;))

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;, boundary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/random-cookie-effect-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Sometimes it can go as low as −0.25; sometimes it can go as high as 0.75; normally it&amp;rsquo;s around 0.25.&lt;/p&gt;
&lt;p&gt;Nothing in the model explains why it&amp;rsquo;s higher or lower for some people—it&amp;rsquo;s just random noise. Remember that the model accounts for that! This random variation is what the &lt;code&gt;\(\varepsilon\)&lt;/code&gt; is for in this model equation:&lt;/p&gt;
&lt;p&gt;$$
\text{Happiness} = \beta_0 + \beta_1 \text{Cookies eaten} + \beta_2 \text{Favorite color is blue} + \varepsilon
$$&lt;/p&gt;
&lt;p&gt;We can build that uncertainty into the fake column! Instead of using &lt;code&gt;0.31 * cookies&lt;/code&gt; when generating &lt;code&gt;happiness&lt;/code&gt; (which is technically 0.25, but shifted up to account for rescaling happiness back down after), we&amp;rsquo;ll make a column for the cookie effect and then multiply &lt;em&gt;that&lt;/em&gt; by the number of cookies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
happiness_cookies_noisier &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
  cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rpois&lt;/span&gt;(n_people, lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
  cookie_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.31&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;),
  color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Adjust some of the columns&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
         cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
         color_blue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fct_relevel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(color_blue), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not blue&amp;#34;&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn the categorical favorite color column into TRUE/FALSE so we can do math with it&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(color_blue_binary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(color_blue &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make blue have an effect on cookie consumption&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(cookies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make a new happiness column that uses coefficients for cookies and favorite&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# color. Importantly, instead of using 0.31 * cookies, we&amp;#39;ll use the random&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# cookie effect we generated earlier&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_baseline &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
           (cookie_effect &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; cookies) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.91&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; color_blue_binary)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale to 3-10, since that&amp;#39;s what the original happiness column looked like&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(happiness_effect, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(happiness_cookies_noisier)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id happiness_baseline cookies cookie_effect color_blue color_blue_binary happiness_effect happiness&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;              &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;lgl&amp;gt;                        &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1                8.7     2.5        0.124  Blue       TRUE                          9.92      8.16&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2                6.5     2.5        0.370  Blue       TRUE                          8.34      7.02&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3                4.8     2.5        0.326  Blue       TRUE                          6.53      5.72&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4                9.6     3.5        0.559  Blue       TRUE                         12.5       9.98&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5                6.2     1.5        0.0631 Blue       TRUE                          7.20      6.21&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6                6.1     2          0.222  Not blue   FALSE                         6.54      5.73&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now let&amp;rsquo;s look at the cookie effect in this noisier data:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_noisier &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(happiness &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cookies &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; color_blue, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; happiness_cookies_noisier)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_noisier)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term           estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)       6.11     0.0779     78.4  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cookies           0.213    0.0314      6.79 1.92e-11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 color_blueBlue    0.650    0.0671      9.68 3.01e-21&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The effect is a little smaller now because of the extra noise, so we&amp;rsquo;d need to mess with the 0.31 and 0.91 coefficients more to get those numbers back up to 0.25 and 0.75.&lt;/p&gt;
&lt;p&gt;While this didn&amp;rsquo;t influence the findings too much here, it can have consequences for other variables. For instance, in the previous section we said that the color blue influences cookie consumption. If the blue effect on cookies isn&amp;rsquo;t precisely 0.5 but follows some sort of distribution (sometimes small, sometimes big, sometimes negative, sometimes zero), that will influence cookies differently. That random effect on cookie consumption will then work together with the random effect of cookies on happiness, resulting in multiple varied values.&lt;/p&gt;
&lt;p&gt;For instance, imagine the average effect of liking blue on cookies is 0.5, and the average effect of cookies on happiness is 0.25. For one person, their blue-on-cookie effect might be 0.392, which changes the number of cookies they eat. Their cookie-on-happiness effect is 0.573, which changes their happiness. Both of those random effects work together to generate the final happiness.&lt;/p&gt;
&lt;p&gt;If you want more realistic-looking synthetic data, it&amp;rsquo;s a good idea to add some random noise wherever you can.&lt;/p&gt;
&lt;h2 id=&#34;visualizing-variables-and-relationships&#34;&gt;Visualizing variables and relationships&lt;/h2&gt;
&lt;p&gt;Going through this process requires &lt;em&gt;a ton&lt;/em&gt; of trial and error. You will change all sorts of numbers to make sure the relationships you&amp;rsquo;re building work. This is especially the case if you rescale things, since that rescales your effects. There are a lot of moving parts and this is a complicated process.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll run your data generation chunks lots and lots and lots of times, tinkering with the numbers as you go. This example makes it look easy, since it&amp;rsquo;s the final product, but I ran all these chunks over and over again until I got the causal effect and relationships just right.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s best if you also create plots and models to see what the relationships look like&lt;/p&gt;
&lt;h3 id=&#34;visualizing-one-variable&#34;&gt;Visualizing one variable&lt;/h3&gt;
&lt;p&gt;We covered a bunch of distributions in the &lt;a href=&#34;/example/random-numbers/&#34;&gt;random number generation&lt;/a&gt; example, but it&amp;rsquo;s hard to think about what a standard deviation of 2 vs 10 looks like, or what happens when you mess with the shape parameters in a Beta distribution.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s best to visualize these variables. You could build the variable into your official dataset and then look at it, but I find it&amp;rsquo;s often faster to just look at what a general distribution looks like first. The easiest way to do this is generate a dataset with just one column in it and look at it, either with a histogram or a density plot.&lt;/p&gt;
&lt;p&gt;For instance, what does a Beta distribution with &lt;code&gt;shape1 = 3&lt;/code&gt; and &lt;code&gt;shape2 = 16&lt;/code&gt; look like? The math says it should peak around 0.15ish ($\frac{3}{3 + 16}$), and that looks like the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;temp_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;))

plot1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;, boundary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;)

plot2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;()

plot1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; plot2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-beta-example-1.png&#34; width=&#34;65%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What if we want a normal distribution centered around 100, with most values range from 50 to 150. That&amp;rsquo;s range of ±50, but that doesn&amp;rsquo;t mean the &lt;code&gt;sd&lt;/code&gt; will be 50—it&amp;rsquo;ll be much smaller than that, like 25ish. Tinker with the numbers until it looks right.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;temp_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;))

plot1 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, boundary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;)

plot2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;()

plot1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; plot2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-normal-example-1.png&#34; width=&#34;65%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;visualizing-two-continuous-variables&#34;&gt;Visualizing two continuous variables&lt;/h3&gt;
&lt;p&gt;If you have two continuous/numeric columns, it&amp;rsquo;s best to use a scatterplot. For instance, let&amp;rsquo;s make two columns based on the Beta and normal distributions above, and we&amp;rsquo;ll make it so that y goes up by 0.25 for every increase in x, along with some noise:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

temp_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Baseline distribution&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Effect of x&lt;/span&gt;
           &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;))  &lt;span style=&#34;color:#75715e&#34;&gt;# Add some noise&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-two-continuous-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can confirm the effect with a model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)    1.98     1.28        1.54 1.24e- 1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 x              0.235    0.0125     18.8  1.49e-67&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;visualizing-a-binary-variable-and-a-continuous-variable&#34;&gt;Visualizing a binary variable and a continuous variable&lt;/h3&gt;
&lt;p&gt;If you have one binary column and one continuous/numeric column, it&amp;rsquo;s generally best to &lt;em&gt;not&lt;/em&gt; use a scatterplot. Instead, either look at the distribution of the continuous variable across the binary variable with a faceted histogram or overlaid density plot, or look at the average of the continuous variable across the different values of the binary variable with a point range.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make two columns: a continuous outcome (y) and a binary treatment (x). Being in the treatment group causes an increase of 20 points, on average.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

temp_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbinom&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, prob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# Make 1000 0/1 values with 50% chance of each&lt;/span&gt;
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Baseline distribution&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; treatment) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Effect of treatment&lt;/span&gt;
           &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# Add some noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(treatment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;factor&lt;/span&gt;(treatment))  &lt;span style=&#34;color:#75715e&#34;&gt;# Make treatment a factor/categorical variable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can check the numbers with a model:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)    0.244     0.935     0.261 7.94e- 1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 treatment1    20.9       1.30     16.1   4.70e-52&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s what that looks like as a histogram:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; outcome, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; treatment)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_histogram&lt;/span&gt;(binwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;white&amp;#34;&lt;/span&gt;, boundary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off the fill legend since it&amp;#39;s redundant&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;facet_wrap&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;vars&lt;/span&gt;(treatment), ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-histogram-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And as overlapping densities:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; outcome, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; treatment)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-density-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And with a point range:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# hahaha these error bars are tiny&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(temp_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; treatment, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; outcome, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; treatment)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;stat_summary&lt;/span&gt;(geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pointrange&amp;#34;&lt;/span&gt;, fun.data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mean_se&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off the color legend since it&amp;#39;s redundant&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/vis-pointrange-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;specific-examples&#34;&gt;Specific examples&lt;/h2&gt;
&lt;h3 id=&#34;tldr-the-general-process&#34;&gt;tl;dr: The general process&lt;/h3&gt;
&lt;p&gt;Those previous sections go into a lot of detail. In general, here&amp;rsquo;s the process you should follow when building relationships in synthetic data:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/li&gt;
&lt;li&gt;Specify how those nodes are measured.&lt;/li&gt;
&lt;li&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/li&gt;
&lt;li&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/li&gt;
&lt;li&gt;Verify all relationships with plots and models.&lt;/li&gt;
&lt;li&gt;Try it out!&lt;/li&gt;
&lt;li&gt;Save the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;creating-an-effect-in-an-observational-dag&#34;&gt;Creating an effect in an observational DAG&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a simple DAG that shows the causal effect of mosquito net usage on malaria risk. Income and health both influence and confound net use and malaria risk, and income also influences health.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; inc &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hlth,
                       net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; inc &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hlth,
                       hlth &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; inc,
                       coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, hlth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                                     y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, hlth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(mosquito_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/observational-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify how those nodes are measured.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the sake of this example, we&amp;rsquo;ll measure these nodes like so. See &lt;a href=&#34;/example/random-numbers&#34;&gt;the random number example&lt;/a&gt; for more details about the distributions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Malaria risk&lt;/strong&gt;: scale from 0–100, mostly around 40, but ranging from 10ish to 80ish. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Net use&lt;/strong&gt;: binary 0/1, TRUE/FALSE variable, where 50% of people use nets. Best to use a binomial distribution. However, since we want to use other variables that increase the likelihood of using a net, we&amp;rsquo;ll do some cool tricky stuff, explained later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Income&lt;/strong&gt;: weekly income, measured in dollars, mostly around 500 ± 300. Best to use a normal distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Health&lt;/strong&gt;: scale from 0–100, mostly around 70, but ranging from 50ish to 100. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are three models in this DAG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hlth ~ inc&lt;/code&gt;&lt;/strong&gt;: Income influences health. We&amp;rsquo;ll assume that every 10 dollars/week is associated with a 1 point increase in health (so a 1 dollar incrrease is associated with a 0.02 point increase in health)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net ~ inc + hlth&lt;/code&gt;&lt;/strong&gt;: Income and health both increase the probability of net usage. This is where we do some cool tricky stuff.&lt;/p&gt;
&lt;p&gt;Both income and health have an effect on the probability of bed net use, but bed net use is measured as a 0/1, TRUE/FALSE variable. If we run a regression with &lt;code&gt;net&lt;/code&gt; as the outcome, we can&amp;rsquo;t really interpret the coefficients like &amp;ldquo;a 1 point increase in health is associated with a 0.42 point increase in bed net being TRUE.&amp;rdquo; That doesn&amp;rsquo;t even make sense.&lt;/p&gt;
&lt;p&gt;Ordinarily, when working with binary outcome variables, you use logistic regression models (see &lt;a href=&#34;/example/matching-ipw/#oversimplified-crash-course-in-logistic-regression&#34;&gt;the crash course we had when talking about propensity scores here&lt;/a&gt;). In this kind of regression, the coefficients in the model represent changes in the &lt;em&gt;log odds&lt;/em&gt; of using a net. As we discuss in &lt;a href=&#34;/example/matching-ipw/#oversimplified-crash-course-in-logistic-regression&#34;&gt;the crash course section&lt;/a&gt;, log odds are typically impossible to interpet. If you exponentiate them, you get odds ratios, which let you say things like &amp;ldquo;a 1 point increase in health is associated with a 15% increase in the likelihood of using a net.&amp;rdquo; Technically we could include coefficients for a logistic regression model and simulate probabilities of using a net or not using log odds and odds ratios (and that&amp;rsquo;s what I do in the rain barrel data from Problem Set 3 (&lt;a href=&#34;https://github.com/andrewheiss/evalf20.classes.andrewheiss.com/blob/master/content/assignment/03-problem-set.Rmd#L225&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see code here&lt;/a&gt;)), but that&amp;rsquo;s really hard to wrap your head around since you&amp;rsquo;re dealing with strange uninterpretable coefficients. So we won&amp;rsquo;t do that here.&lt;/p&gt;
&lt;p&gt;Instead, we&amp;rsquo;ll do some fun trickery. We&amp;rsquo;ll create something called a &amp;ldquo;bed net score&amp;rdquo; that gets bigger as income and health increase. We&amp;rsquo;ll say that a 1 point increase in health score is associated with a 1.5 point increase in bed net score, and a 1 dollar increase in income is associated with a 0.5 point increase in bed net score. This results in a column that ranges all over the place, from 200 to 500 (in this case; that won&amp;rsquo;t always be true). This column definitely doesn&amp;rsquo;t look like a TRUE/FALSE binary column—it&amp;rsquo;s just a bunch of numbers. That&amp;rsquo;s okay!&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll then use the &lt;code&gt;rescale()&lt;/code&gt; function from the &lt;strong&gt;scales&lt;/strong&gt; package to take this bed net score and scale it down so that it goes from 0.05 to 0.95. This represents a person&amp;rsquo;s probability of using a bed net.&lt;/p&gt;
&lt;p&gt;Finally, we&amp;rsquo;ll use that probability in the &lt;code&gt;rbinom()&lt;/code&gt; function to generate a 0 or 1 for each person. Some people will have a high probability because of their income and health, like 0.9, and will most likely use a net. Some people might have a 0.15 probability and will likely not use a net.&lt;/p&gt;
&lt;p&gt;When you generate binary variables like this, it&amp;rsquo;s hard to know the exact effect you&amp;rsquo;ll get, so it&amp;rsquo;s best to tinker with the numbers until you see relationships that you want.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mal ~ net + inc + hlth&lt;/code&gt;&lt;/strong&gt;: Finally net use, income, and health all have an effect on the risk of malaria. Building this relationship is easy since it&amp;rsquo;s just a regular linear regression model (since malaria risk is not binary). We&amp;rsquo;ll say that a 1 dollar increase in income is associated with a &lt;em&gt;decrease&lt;/em&gt; in risk, a 1 point increase in health is associated with a &lt;em&gt;decrease&lt;/em&gt; in risk, and using a net is associated with a 15 point &lt;em&gt;decrease&lt;/em&gt; in risk. That&amp;rsquo;s the casual effect we&amp;rsquo;re building in to the DAG.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here we go! Let&amp;rsquo;s make some data. I&amp;rsquo;ll comment the code below so you can see what&amp;rsquo;s happening at each step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make this randomness consistent&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Simulate 1138 people (just for fun)&lt;/span&gt;
n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1138&lt;/span&gt;
   
net_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an ID column (not necessary, but nice to have)&lt;/span&gt;
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate income variable: normal, 500 ± 300&lt;/span&gt;
  income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate health variable: beta, centered around 70ish&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(health_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Health increases by 0.02 for every dollar in income&lt;/span&gt;
         health_income_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Make the final health score and add some noise&lt;/span&gt;
         health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health_income_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go above 100&lt;/span&gt;
         health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(health, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(health), &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate net variable based on income, health, and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net_score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; income) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; health) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Scale net score down to 0.05 to 0.95 to create a probability of using a net&lt;/span&gt;
         net_probability &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(net_score, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.95&lt;/span&gt;)),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Randomly generate a 0/1 variable using that probability&lt;/span&gt;
         net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbinom&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net_probability)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Finally generate a malaria risk variable based on income, health, net use,&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Risk goes down by 10 when using a net. Because we rescale things,&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# though, we have to make the effect a lot bigger here so it scales&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# down to -10. Risk also decreases as health and income go up. I played&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# with these numbers until they created reasonable coefficients.&lt;/span&gt;
         malaria_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-30&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; net) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-1.9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; health) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; income),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Make the final malaria risk score and add some noise&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; malaria_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go below 0,&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;)))
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Look at all these columns!&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(net_data)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income health_base health_income_effect health net_score net_probability   net malaria_risk_base malaria_effect malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;             &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409.        61.2                 8.19   63.1      301.           0.369     0              37.9          -161.         45.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521.        83.9                10.4    83.5      409.           0.684     1              55.0          -241.         23.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581.        64.6                11.6    73.0      426.           0.735     0              53.0          -197.         36.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324.        62.0                 6.48   60.6      255.           0.235     0              68.4          -148.         58.7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532.        69.2                10.6    73.4      373.           0.578     1              63.2          -223.         32.7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538.        36.6                10.8    42.6      295.           0.351     0              38.6          -135.         52.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify all relationships with plots and models.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see if we have the relationships we want. Income looks like it&amp;rsquo;s associated with health:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(net_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-income-health-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;   
&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  59.1      2.54        23.3  2.24e-98&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 income        0.0169   0.00504      3.36 8.15e- 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It looks like richer and healthier people are more likely to use nets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;net_income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(net_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
   
net_health &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(net_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
   
net_income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net_health
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-income-health-nets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Income increasing makes it 1% more likely to use a net; health increasing make it 2% more likely to use a net:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glm&lt;/span&gt;(net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health, family &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;binomial&lt;/span&gt;(link &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logit&amp;#34;&lt;/span&gt;), data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(exponentiate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)   0.0186  0.532        -7.49 6.64e-14&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 income        1.01    0.000864      6.47 9.93e-11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        1.02    0.00491       3.89 9.92e- 5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Try it out!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is the effect in there? Let&amp;rsquo;s try finding it by controlling for our two backdoors: health and income. Ordinarily we should do something like &lt;a href=&#34;/example/matching-ipw/&#34;&gt;matching or inverse probability weighting&lt;/a&gt;, but we&amp;rsquo;ll just do regular regression here (which is okay-ish, since all these variables are indeed linearly related with each other—we made them that way!)&lt;/p&gt;
&lt;p&gt;If we just look at the effect of nets on malaria risk without any statistical adjustment, we see that net cause a decrease of 13 points in malaria risk. This is wrong though becuase there&amp;rsquo;s confounding.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Wrong correlation-is-not-causation effect&lt;/span&gt;
model_net_naive &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_net_naive)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)     41.9     0.413     102.  0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 net            -13.6     0.572     -23.7 2.90e-101&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we control for the confounders, we get the 10 point ATE. It works!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Correctly adjusted ATE effect&lt;/span&gt;
model_net_ate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_net_ate)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 4 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  97.3      1.28         76.1 0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 net         -10.5      0.317       -33.2 1.32e-169&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health       -0.608    0.0123      -49.4 1.25e-284&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0320   0.00213     -15.0 1.20e- 46&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since it works, let&amp;rsquo;s save it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In the end, all we need is id, income, health, net, and malaria risk:&lt;/span&gt;
net_data_final &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; net_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, income, health, net, malaria_risk)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(net_data_final)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income health   net malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409.   63.1     0         45.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521.   83.5     1         23.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581.   73.0     0         36.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324.   60.6     0         58.7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532.   73.4     1         32.7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538.   42.6     0         52.5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Save it as a CSV file&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(net_data_final, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/bed_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;brief-pep-talk-intermission&#34;&gt;Brief pep talk intermission&lt;/h3&gt;
&lt;p&gt;Generating data for a full complete observational DAG like the example above is complicated and hard. These other forms of causal inference are &lt;em&gt;design-based&lt;/em&gt; (i.e. tied to specific contexts like before/after treatment/control or arbitrary cutoffs) instead of &lt;em&gt;model-based&lt;/em&gt;, so they&amp;rsquo;re actually a lot easier to simulate! So don&amp;rsquo;t be scared away yet!&lt;/p&gt;
&lt;h3 id=&#34;creating-an-effect-for-rcts&#34;&gt;Creating an effect for RCTs&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RCTs are great because they make DAGs really easy! In a well-randomized RCT, you get to delete all arrows going into the treatment node in a DAG. We&amp;rsquo;ll stick with the same mosquito net situation we just used, but make it randomized:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;rct_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; inc &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; hlth,
                  hlth &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; inc,
                  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, hlth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, hlth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(rct_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/rct-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify how those nodes are measured.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll measure these nodes the same way as before:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Malaria risk&lt;/strong&gt;: scale from 0–100, mostly around 40, but ranging from 10ish to 80ish. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Net use&lt;/strong&gt;: binary 0/1, TRUE/FALSE variable, where 50% of people use nets. Best to use a binomial distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Income&lt;/strong&gt;: weekly income, measured in dollars, mostly around 500 ± 300. Best to use a normal distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Health&lt;/strong&gt;: scale from 0–100, mostly around 70, but ranging from 50ish to 100. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is where RCTs are great. Because we removed all the arrows going into &lt;code&gt;net&lt;/code&gt;, we don&amp;rsquo;t need to build any relationships that influence net use. Net use is randomized! We don&amp;rsquo;t need to make strange &amp;ldquo;bed net scores&amp;rdquo; and give people boosts according to income or health or anything. There are only two models in this DAG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;hlth ~ inc&lt;/code&gt;&lt;/strong&gt;: Income influences health. We&amp;rsquo;ll assume that every 10 dollars/week is associated with a 1 point increase in health (so a 1 dollar incrrease is associated with a 0.02 point increase in health)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mal ~ net + inc + hlth&lt;/code&gt;&lt;/strong&gt;: Net use, income, and health all have an effect on the risk of malaria. We&amp;rsquo;ll say that a 1 dollar increase in income is associated with a &lt;em&gt;decrease&lt;/em&gt; in risk, a 1 point increase in health is associated with a &lt;em&gt;decrease&lt;/em&gt; in risk, and using a net is associated with a 15 point &lt;em&gt;decrease&lt;/em&gt; in risk. That&amp;rsquo;s the casual effect we&amp;rsquo;re building in to the DAG.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s make this data. It&amp;rsquo;ll be a lot easier than the full DAG we did before. Again, I&amp;rsquo;ll comment the code below so you can see what&amp;rsquo;s happening at each step.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make this randomness consistent&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Simulate 793 people (just for fun)&lt;/span&gt;
n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;793&lt;/span&gt;
   
rct_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an ID column (not necessary, but nice to have)&lt;/span&gt;
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate income variable: normal, 500 ± 300&lt;/span&gt;
  income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate health variable: beta, centered around 70ish&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(health_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Health increases by 0.02 for every dollar in income&lt;/span&gt;
         health_income_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Make the final health score and add some noise&lt;/span&gt;
         health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health_income_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go above 100&lt;/span&gt;
         health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(health, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;min&lt;/span&gt;(health), &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Randomly assign people to use a net (this is nice and easy!)&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbinom&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Finally generate a malaria risk variable based on income, health, net use,&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Risk goes down by 10 when using a net. Because we rescale things,&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# though, we have to make the effect a lot bigger here so it scales&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# down to -10. Risk also decreases as health and income go up. I played&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# with these numbers until they created reasonable coefficients.&lt;/span&gt;
         malaria_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-35&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; net) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-1.9&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; health) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; income),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Make the final malaria risk score and add some noise&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; malaria_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go below 0,&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;)))
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Look at all these columns!&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(rct_data)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 9&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income health_base health_income_effect health   net malaria_risk_base malaria_effect malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;             &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409.        57.2                 8.19   61.3     1              37.4          -192.         35.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521.        63.3                10.4    69.4     0              33.0          -184.         37.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581.        61.8                11.6    71.9     1              36.4          -230.         24.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324.        42.2                 6.48   45.5     1              52.7          -154.         52.8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532.        72.1                10.6    78.5     1              41.9          -237.         23.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538.        82.0                10.8    89.1     0              46.6          -223.         29.9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify all relationships with plots and models.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Income still looks like it&amp;rsquo;s associated with health (which isn&amp;rsquo;t surprising, since it&amp;rsquo;s the same code we used for the full DAG earlier):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(net_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; health)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-income-health-rct-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;   
&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_data) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  59.1      2.54        23.3  2.24e-98&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 income        0.0169   0.00504      3.36 8.15e- 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Try it out!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is the effect in there? With an RCT, all we really need to do is compare the outcome across treatment and control groups—because there&amp;rsquo;s no confounding, we don&amp;rsquo;t need to control for anything. Ordinarily we should check for balance across characteristics like health and income (and maybe generate other demographic columns) like &lt;a href=&#34;/example/rcts/&#34;&gt;we did in the RCT example&lt;/a&gt;, but we&amp;rsquo;ll skip all that here since we&amp;rsquo;re just checking to see if the effect is there.&lt;/p&gt;
&lt;p&gt;It looks like using nets &lt;em&gt;causes&lt;/em&gt; an average decrease of 10 risk points. Great!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Correct RCT-based ATE&lt;/span&gt;
model_rct &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rct_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_rct)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)     40.8     0.463      88.0 0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 net            -10.2     0.653     -15.7 2.22e-48&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just for fun, if we control for health and income, we&amp;rsquo;ll get basically the same effect, since they don&amp;rsquo;t actualy confound the relationship and don&amp;rsquo;t really explain anything useful.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Controlling for stuff even though we don&amp;#39;t need to&lt;/span&gt;
model_rct_controls &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rct_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_rct_controls)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 4 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  97.7      1.45         67.3 0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 net         -10.8      0.344       -31.3 2.27e-140&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health       -0.586    0.0140      -41.8 1.67e-202&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0310   0.00230     -13.5 1.75e- 37&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data works, so let&amp;rsquo;s get rid of the intermediate columns we don&amp;rsquo;t need and save it as a CSV file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In the end, all we need is id, income, health, net, and malaria risk:&lt;/span&gt;
rct_data_final &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; rct_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, income, health, net, malaria_risk)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(rct_data_final)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income health   net malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409.   61.3     1         35.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521.   69.4     0         37.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581.   71.9     1         24.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324.   45.5     1         52.8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532.   78.5     1         23.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538.   89.1     0         29.9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Save it as a CSV file&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(rct_data_final, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/bed_nets_rct.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;creating-an-effect-for-diff-in-diff&#34;&gt;Creating an effect for diff-in-diff&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Difference-in-differences approaches to causal inference are not based on &lt;em&gt;models&lt;/em&gt; but on &lt;em&gt;context&lt;/em&gt; or research design. You need comparable treatment and control groups before and after some policy or program is implemented.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll keep with our mosquito net example and pretend that two cities in some country are dealing with malaria infections. City B rolls out a free net program in 2017; City A does not. Here&amp;rsquo;s what the DAG looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;did_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; city,
                  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; city,
                  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, city &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, city &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(did_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/did-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify how those nodes are measured.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how we&amp;rsquo;ll measure these nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Malaria risk&lt;/strong&gt;: scale from 0–100, mostly around 60, but ranging from 30ish to 90ish. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Net use&lt;/strong&gt;: binary 0/1, TRUE/FALSE variable. This is technically binomial, but we don&amp;rsquo;t need to simulate it since it will only happen for people who are in the treatment city after the universal net rollout.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Year&lt;/strong&gt;: year ranging from 2013 to 2020. Best to use a uniform distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;City&lt;/strong&gt;: binary 0/1, City A/City B variable. Best to use a binomial distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are two models in the DAG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net ~ year + city&lt;/code&gt;&lt;/strong&gt;: Net use is determined by being in City B &lt;em&gt;and&lt;/em&gt; being after 2017. We&amp;rsquo;ll assume perfect compliance here (but it&amp;rsquo;s fairly easy to simulate non-compliance and have some people in City A use nets after 2017, and some people in both cities use nets before 2017).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mal ~ net + year + city&lt;/code&gt;&lt;/strong&gt;: Malaria risk is determined by net use, year, and city. It&amp;rsquo;s determined by lots of other things too (like we saw in the previous DAGs), but since we&amp;rsquo;re assuming that the two cities are comparable treatment and control groups, we don&amp;rsquo;t need to worry about things like health, income, age, etc.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll pretend that in general, City B has historicallly had a problem with malaria and people there have had higher risk: being in City B increases malaria risk by 5 points, on average. Over time, both cities have worked on mosquito abatement, so average malaria risk has decreased by 2 points per year (in both cities, because we believe in parallel trends). Using a mosquito net causes a decrease of 10 points on average. That&amp;rsquo;s our causal effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Generation time! Heavily annotated code below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make this randomness consistent&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Simulate 2567 people (just for fun)&lt;/span&gt;
n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2567&lt;/span&gt;
   
did_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an ID column (not necessary, but nice to have)&lt;/span&gt;
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate year variable: uniform, between 2013 and 2020. Round so it&amp;#39;s whole.&lt;/span&gt;
  year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;runif&lt;/span&gt;(n_people, min &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2013&lt;/span&gt;, max &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate city variable: binomial, 50% chance of being in a city. We&amp;#39;ll use&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# sample() instead of rbinom()&lt;/span&gt;
  city &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;City A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;City B&amp;#34;&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate net variable. We&amp;#39;re assuming perfect compliance, so this will only&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# be TRUE for people in City B after 2017&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(city &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;City B&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate a malaria risk variable based on year, city, net use, and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Risk goes up if you&amp;#39;re in City B because they have a worse problem.&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# We could just say &amp;#34;city_effect = 5&amp;#34; and give everyone in City A an&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# exact 5-point boost, but to add some noise, we&amp;#39;ll give people an&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# average boost using rnorm(). Some people might go up 7, some might go&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# up 1, some might go down 2&lt;/span&gt;
         city_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(city &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;City B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Risk goes down by 2 points on average every year. Creating this&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# effect with regression would work fine (-2 * year), except the years&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# are huge here (-2 * 2013 and -2 * 2020, etc.) So first we create a&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# smaller year column where 2013 is year 1, 2014 is year 2, and so on,&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# that way we can say -2 * 1 and -2 * 6, or whatever.&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# Also, rather than make risk go down by *exactly* 2 every year, we&amp;#39;ll&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# add some noise with rnorm(), so for some people it&amp;#39;ll go down by 1 or&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# 4 or up by 1, and so on&lt;/span&gt;
         year_smaller &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2012&lt;/span&gt;,
         year_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-2&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; year_smaller,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Using a net causes a decrease of 10 points, on average. Again, rather&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# than use exactly 10, we&amp;#39;ll use a distribution around 10. People only&lt;/span&gt;
         &lt;span style=&#34;color:#75715e&#34;&gt;# get a net boost if they&amp;#39;re in City B after 2017.&lt;/span&gt;
         net_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(city &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;City B&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;,
                             &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-10&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;),
                             &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Finally combine all these effects to create the malaria risk variable&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; city_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; year_effect &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net_effect,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go below 0 or above 100&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an indicator variable showing if the row is after 2017&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(after &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt;)
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(did_data)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id  year city   net   malaria_risk_base city_effect year_smaller year_effect net_effect malaria_risk after&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;lgl&amp;gt;             &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1  2014 City B FALSE              53.0        6.25            2       -3.97          0         54.2 FALSE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2  2017 City B FALSE              89.7        3.32            5       -9.17          0         84.1 FALSE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3  2017 City A FALSE              49.5        0               5      -10.1           0         37.6 FALSE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4  2017 City B FALSE              37.4        7.11            5       -9.44          0         33.1 FALSE&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5  2019 City A FALSE              76.6        0               7      -14.7           0         61.1 TRUE &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6  2017 City B FALSE              65.7        5.38            5      -10.4           0         59.9 FALSE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify all relationships with plots and models.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is risk higher in City B? Yep.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(did_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;stat_summary&lt;/span&gt;(geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pointrange&amp;#34;&lt;/span&gt;, fun.data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mean_se&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-risk-increase-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Does risk decrease over time? And are the trends parallel? There was a weird random spike in City B in 2017 for whatever reason, but in general, the trends in the two cities are pretty parallel from 2013 to 2017.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;plot_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; did_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(year, city) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(malaria_risk),
            se_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;(malaria_risk) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sqrt&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()),
            upper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.96&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; se_risk),
            lower &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-1.96&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; se_risk))
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(plot_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_vline&lt;/span&gt;(xintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2017.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_ribbon&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(ymin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lower, ymax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; upper, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city), alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-parallel-trends-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Try it out!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s see if it works! For diff-in-diff we need to use this model:&lt;/p&gt;
&lt;p&gt;$$
\text{Malaria risk} = \alpha + \beta\ \text{City B} + \gamma\ \text{After 2017} + \delta\ (\text{City B} \times \text{After 2017}) + \varepsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_did &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; city &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; after &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; city &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; after, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; did_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_did)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 4 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term                 estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)             59.2      0.549    108.   0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 cityCity B               5.17     0.778      6.64 3.71e-11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 afterTRUE               -7.47     0.939     -7.96 2.61e-15&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 cityCity B:afterTRUE   -10.2      1.32      -7.79 9.67e-15&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It works! Being in City B is associated with a 5-point higher risk on average; being after 2017 is associated with a 7.5-point lower risk on average, and being in City B after 2017 causes risk to drop by −10. The number isn&amp;rsquo;t exactly −10 here, since we rescaled the &lt;code&gt;malaria_risk&lt;/code&gt; column a little, but still, it&amp;rsquo;s close. It&amp;rsquo;d probably be a good idea to build in some more noise and noncompliance, since the p-values are really really tiny here, but this is good enough for now.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an obligatory diff-in-diff visualization:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;plot_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; did_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(after, city) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(malaria_risk),
            se_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;(malaria_risk) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sqrt&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;n&lt;/span&gt;()),
            upper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.96&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; se_risk),
            lower &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-1.96&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; se_risk))
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Extract parts of the model results for adding annotations&lt;/span&gt;
model_results &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_did)
before_treatment &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(model_results, term &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(Intercept)&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;estimate &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(model_results, term &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cityCity B&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;estimate
diff_diff &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(model_results, term &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cityCity B:afterTRUE&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;estimate
after_treatment &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; before_treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; diff_diff &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(model_results, term &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;afterTRUE&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;estimate
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(plot_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; after, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean_risk, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city, group &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; city)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_pointrange&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(ymin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lower, ymax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; upper)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;annotate&lt;/span&gt;(geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;segment&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, xend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
           y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; before_treatment, yend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; after_treatment &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; diff_diff,
           linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;grey50&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;annotate&lt;/span&gt;(geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;segment&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.1&lt;/span&gt;, xend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.1&lt;/span&gt;,
           y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; after_treatment, yend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; after_treatment &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; diff_diff,
           linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dotted&amp;#34;&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/show-diff-diff-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data works, so let&amp;rsquo;s get rid of the intermediate columns we don&amp;rsquo;t need and save it as a CSV file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;did_data_final &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; did_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, year, city, net, malaria_risk)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(did_data_final)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id  year city   net   malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;lgl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1  2014 City B FALSE         54.2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2  2017 City B FALSE         84.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3  2017 City A FALSE         37.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4  2017 City B FALSE         33.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5  2019 City A FALSE         61.1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6  2017 City B FALSE         59.9&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Save data&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(did_data_final, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/diff_diff.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;creating-an-effect-for-regression-discontinuity&#34;&gt;Creating an effect for regression discontinuity&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Regression discontinuity designs are also based on context instead of models, so the DAG is pretty simple. We&amp;rsquo;ll keep with our mosquito net example and pretend that families that earn less than $450 a week qualify for a free net. Here&amp;rsquo;s the DAG:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;rdd_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; inc,
                  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; cut,
                  cut &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; inc,
                  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, cut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
                                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, inc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, cut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.75&lt;/span&gt;)))
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(rdd_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/rdd-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify how those nodes are measured.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how we&amp;rsquo;ll measure these nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Malaria risk&lt;/strong&gt;: scale from 0–100, mostly around 60, but ranging from 30ish to 90ish. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Net use&lt;/strong&gt;: binary 0/1, TRUE/FALSE variable. This is technically binomial, but we don&amp;rsquo;t need to simulate it since it will only happen for people who below the cutoff.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Income&lt;/strong&gt;: weekly income, measured in dollars, mostly around 500 ± 300. Best to use a normal distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cutoff&lt;/strong&gt;: binary 0/1, below/above $450 variable. This is technically binomial, but we don&amp;rsquo;t need to simulate it since it is entirely based on income.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are three models in the DAG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;cut ~ inc&lt;/code&gt;&lt;/strong&gt;: Being above or below the cutpoint is determined by income. We know the cutoff is 450, so we just make an indicator showing if people are below that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net ~ cut&lt;/code&gt;&lt;/strong&gt;: Net usage is determined by the cutpoint. If people are below the cutpoint, they&amp;rsquo;ll use a net; if not, they won&amp;rsquo;t. We can build in noncompliance here if we want and use fuzzy regression discontinuity. For the sake of this example, we&amp;rsquo;ll do it both ways, just so you can see both sharp and fuzzy synthetic data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mal ~ net + inc&lt;/code&gt;&lt;/strong&gt;: Malaria risk is determined by both net usage and income. It&amp;rsquo;s also determined by lots of other things (age, education, city, etc.), but we don&amp;rsquo;t need to include those in the DAG because we&amp;rsquo;re using RDD to say that we have good treatment and control groups right around the cutoff.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll pretend that a 1 dollar increase in income is associated with a drop in risk of 0.01, and that using a mosquito net causes a decrease of 10 points on average. That&amp;rsquo;s our causal effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s fake some data! Heavily annotated code below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make this randomness consistent&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Simulate 5441 people (we need a lot bc we&amp;#39;re throwing most away)&lt;/span&gt;
n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5441&lt;/span&gt;
   
rdd_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an ID column (not necessary, but nice to have)&lt;/span&gt;
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate income variable: normal, 500 ± 300&lt;/span&gt;
  income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate cutoff variable&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(below_cutoff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate net variable. We&amp;#39;ll make two: one that&amp;#39;s sharp and has perfect&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# compliance, and one that&amp;#39;s fuzzy&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Here&amp;#39;s the sharp one. It&amp;#39;s easy. If you&amp;#39;re below the cutoff you use a net.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net_sharp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(below_cutoff &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Here&amp;#39;s the fuzzy one, which is a little trickier. If you&amp;#39;re far away from&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# the cutoff, you follow what you&amp;#39;re supposed to do (like if your income is&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# 800, you don&amp;#39;t use the program; if your income is 200, you definitely use&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# the program). But if you&amp;#39;re close to the cutoff, we&amp;#39;ll pretend that there&amp;#39;s&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# an 80% chance that you&amp;#39;ll do what you&amp;#39;re supposed to do.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;case_when&lt;/span&gt;(
    &lt;span style=&#34;color:#75715e&#34;&gt;# If your income is between 450 and 500, there&amp;#39;s a 20% chance of using the program&lt;/span&gt;
    income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, prob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;)),
    &lt;span style=&#34;color:#75715e&#34;&gt;# If your income is above 500, you definitely don&amp;#39;t use the program&lt;/span&gt;
    income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;,
    &lt;span style=&#34;color:#75715e&#34;&gt;# If your income is between 400 and 450, there&amp;#39;s an 80% chance of using the program&lt;/span&gt;
    income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sample&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;), n_people, replace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;, prob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)),
    &lt;span style=&#34;color:#75715e&#34;&gt;# If your income is below 400, you definitely use the program&lt;/span&gt;
    income &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;
  )) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Finally we can make the malaria risk score, based on income, net use, and&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# random noise. We&amp;#39;ll make two outcomes: one using the sharp net use and one&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# using the fuzzy net use. They have the same effect built in, we just have to&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# use net_sharp and net_fuzzy separately.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make the sharp version. There&amp;#39;s really a 10 point decrease, but because of&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# rescaling, we use 15. I only chose 15 through lots of trial and error (i.e.&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# I used -11, ran the RDD model, and the effect was too small; I used -20, ran&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# the model, and the effect was too big; I kept changing numbers until landing&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# on -15). Risk also goes down as income increases.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_effect_sharp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-15&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; net_sharp) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-0.01&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; income),
         malaria_risk_sharp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; malaria_effect_sharp &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         malaria_risk_sharp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk_sharp, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Do the same thing, but with net_fuzzy&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_effect_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-15&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; net_fuzzy) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-0.01&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; income),
         malaria_risk_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; malaria_effect_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
         malaria_risk_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk_fuzzy, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make a version of income that&amp;#39;s centered at the cutpoint&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(income_centered &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;)
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(rdd_data)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 11&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income below_cutoff net_sharp net_fuzzy malaria_risk_base malaria_effect_sharp malaria_risk_sharp malaria_effect_fuzzy malaria_risk_fuzzy income_centered&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;        &amp;lt;lgl&amp;gt;     &amp;lt;lgl&amp;gt;                 &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;                &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409. TRUE         TRUE      FALSE                  56.5               -19.1                38.0                -4.09               47.5           -40.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521. FALSE        FALSE     FALSE                  26.1                -5.21               28.6                -5.21               27.6            70.8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581. FALSE        FALSE     FALSE                  84.4                -5.81               64.7                -5.81               65.5           131. &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324. TRUE         TRUE      TRUE                   32.9               -18.2                25.9               -18.2                23.4          -126. &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532. FALSE        FALSE     FALSE                  53.1                -5.32               46.5                -5.32               44.3            82.2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538. FALSE        FALSE     FALSE                  45.7                -5.38               43.2                -5.38               40.2            88.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify all relationships with plots and models.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is there a cutoff in the running variable when we use the sharp net variable? Yep!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(rdd_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_sharp, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; below_cutoff)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_vline&lt;/span&gt;(xintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_jitter&lt;/span&gt;(width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/sharp-running-var-cutoff-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Is there a cutoff in the running variable when we use the fuzzy net variable? Yep! There are some richer people using the program and some poorer people not using it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(rdd_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_fuzzy, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; below_cutoff)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_vline&lt;/span&gt;(xintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;position_jitter&lt;/span&gt;(width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NULL&lt;/span&gt;, height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/fuzzy-running-var-cutoff-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Try it out!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s test it! For sharp RDD we need to use this model:&lt;/p&gt;
&lt;p&gt;$$
\text{Malaria risk} = \beta_0 + \beta_1 \text{Income}_\text{centered} + \beta_2 \text{Net} + \varepsilon
$$&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll use a bandwidth of ±$50, because why not. In real life you&amp;rsquo;d be more careful about bandwidth selection (or use &lt;code&gt;rdbwselect()&lt;/code&gt; from the &lt;strong&gt;rdrobust&lt;/strong&gt; package to find the optimal bandwidth)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(rdd_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_sharp, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_sharp)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_vline&lt;/span&gt;(xintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Add lines for the full range&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Add lines for bandwidth = 50&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/sharp-results-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sharp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk_sharp &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net_sharp,
                  data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data,
                                income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;))
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sharp)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term            estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;              &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)      40.7       0.462      88.1  0.      &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 income_centered  -0.0197    0.0144     -1.37 1.72e- 1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 net_sharpTRUE   -10.6       0.815     -13.0  1.67e-37&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There&amp;rsquo;s an effect! For people in the bandwidth, the local average treatment effect of nets is a 10.6 point reduction in malaria risk.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check if it works with the fuzzy version where there are noncompliers:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(rdd_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; income, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_fuzzy, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_fuzzy)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_vline&lt;/span&gt;(xintercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;450&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Add lines for the full range&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, linetype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dashed&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Add lines for bandwidth = 50&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data, income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),
              method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme&lt;/span&gt;(legend.position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bottom&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/fuzzy-results-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a gap, but it&amp;rsquo;s hard to measure since there are noncompliers on both sides. We can deal with the noncompliance if we use above/below the cutoff as an instrument (see the &lt;a href=&#34;/example/rdd-fuzzy/&#34;&gt;fuzzy regression discontinuity guide&lt;/a&gt; for a complete example). We should run this set of models:&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\widehat{\text{Net}} &amp;amp;= \gamma_0 + \gamma_1 \text{Income}_{\text{centered}} + \gamma_2 \text{Below 450} + \omega \\&lt;br&gt;
\text{Malaria risk} &amp;amp;= \beta_0 + \beta_1 \text{Income}_{\text{centered}} + \beta_2 \widehat{\text{Net}} + \epsilon
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;Instead of doing these two stages by hand (ugh), we&amp;rsquo;ll do the 2SLS regression with the &lt;code&gt;iv_robust()&lt;/code&gt; function from the &lt;strong&gt;estimatr&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(estimatr)
&lt;span style=&#34;color:#75715e&#34;&gt;## Warning: package &amp;#39;estimatr&amp;#39; was built under R version 4.0.5&lt;/span&gt;
   
model_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;iv_robust&lt;/span&gt;(malaria_risk_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
                           income_centered &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; below_cutoff,
                         data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;filter&lt;/span&gt;(rdd_data,
                                       income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;-50&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; income_centered &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;))
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_fuzzy)
&lt;span style=&#34;color:#75715e&#34;&gt;##              term  estimate std.error statistic   p.value  conf.low conf.high   df            outcome&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     (Intercept)  40.73241   0.69045    58.994 0.000e+00  39.37843 42.086402 2220 malaria_risk_fuzzy&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 income_centered  -0.01921   0.01423    -1.350 1.772e-01  -0.04711  0.008696 2220 malaria_risk_fuzzy&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3   net_fuzzyTRUE -11.21929   1.31033    -8.562 2.034e-17 -13.78889 -8.649700 2220 malaria_risk_fuzzy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The effect is slightly larger now (−11.2), but that&amp;rsquo;s because we are looking at a doubly local ATE: compliers in the bandwidth. But still, it&amp;rsquo;s close to −10, so that&amp;rsquo;s good. And we could probably get it closer if we did other mathy shenanigans like adding squared and cubed terms or using nonparametric estimation with &lt;code&gt;rdrobust()&lt;/code&gt; in the &lt;strong&gt;rdrobust&lt;/strong&gt; package.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data works, so let&amp;rsquo;s get rid of the intermediate columns we don&amp;rsquo;t need and save it as a CSV file. We&amp;rsquo;ll make two separate CSV files for fuzzy and sharp, just because.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;rdd_data_final_sharp &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; rdd_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, income, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_sharp, malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_sharp)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(rdd_data_final_sharp)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income net   malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409. TRUE          38.0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521. FALSE         28.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581. FALSE         64.7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324. TRUE          25.9&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532. FALSE         46.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538. FALSE         43.2&lt;/span&gt;
   
rdd_data_final_fuzzy &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; rdd_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, income, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; net_fuzzy, malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_fuzzy)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(rdd_data_final_fuzzy)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id income net   malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1   409. FALSE         47.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2   521. FALSE         27.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3   581. FALSE         65.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4   324. TRUE          23.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5   532. FALSE         44.3&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6   538. FALSE         40.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Save data&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(rdd_data_final_sharp, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/rdd_sharp.csv&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(rdd_data_final_fuzzy, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/rdd_fuzzy.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;creating-an-effect-for-instrumental-variables&#34;&gt;Creating an effect for instrumental variables&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Draw a DAG that maps out how all the columns you care about are related.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As with diff-in-diff and regression discontinuity, instrumental variables are a design-based approach to causal inference and thus don&amp;rsquo;t require complicated models (but you can still add control variables!), so their DAGs are simpler. Once again we&amp;rsquo;ll look at the effect of mosquito nets on malaria risk, but this time we&amp;rsquo;ll say that we cannot possibly measure all the confounding factors between net use and malaria risk, so we&amp;rsquo;ll use an instrument to extract the exogeneity from net use.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/content/11-content/&#34;&gt;As we talked about in Session 11&lt;/a&gt;, good plausible instruments are hard to find: they have to cause bed net use and &lt;em&gt;not&lt;/em&gt; be related to malaria risk &lt;em&gt;except through&lt;/em&gt; bed net use.&lt;/p&gt;
&lt;p&gt;For this example, we&amp;rsquo;ll pretend that free bed nets are distributed from town halls around the country. We&amp;rsquo;ll use &amp;ldquo;distance to town hall&amp;rdquo; as our instrument, since it could arguably maybe work perhaps. Being closer to a town hall makes you more likely to use a net, but being closer to a town halls doesn&amp;rsquo;t make put you at higher or lower risk for malaria on its own—it does that only because it changes your likelihood of getting a net.&lt;/p&gt;
&lt;p&gt;This is where the story for the instrument falls apart, actually; in real life, if you live far away from a town hall, you probably live further from health services and live in more rural places with worse mosquito abatement policies, so you&amp;rsquo;re probably at higher risk of malaria. It&amp;rsquo;s probably a bad instrument, but just go with it.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the DAG:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;iv_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; U,
                 net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; dist &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; U,
                 coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, U &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                               y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(mal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, U &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;)),
                 latent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;U&amp;#34;&lt;/span&gt;)
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(iv_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/iv-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify how those nodes are measured.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how we&amp;rsquo;ll measure these nodes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Malaria risk&lt;/strong&gt;: scale from 0–100, mostly around 60, but ranging from 30ish to 90ish. Best to use a Beta distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Net use&lt;/strong&gt;: binary 0/1, TRUE/FALSE variable. However, since we want to use other variables that increase the likelihood of using a net, we&amp;rsquo;ll do some cool tricky stuff with a bed net score, like we did in the observational DAG example earlier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distance&lt;/strong&gt;: distance to nearest town hall, measured in kilometers, mostly around 3, with a left skewed long tail (i.e. most people live fairly close, some people live far away). Best to use a Beta distribution (to get the skewed shape) that we then rescale.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unobserved&lt;/strong&gt;: who knows?! There are a lot of unknown confounders. We could generate columns like income, age, education, and health, make them mathematically related to malaria risk and net use, and then throw those columns away in the final data so they&amp;rsquo;re unobserved. That would be fairly easy and intuitive.&lt;/p&gt;
&lt;p&gt;For the sake of simplicity here, we&amp;rsquo;ll make a column called &amp;ldquo;risk factors,&amp;rdquo; kind of like we did with the &amp;ldquo;ability&amp;rdquo; column in &lt;a href=&#34;https://evalf20.classes.andrewheiss.com/example/iv/#education-wages-and-fathers-education-fake-data&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the instrumental variables example&lt;/a&gt;—it&amp;rsquo;s a magical column that is unmeasurable, but it&amp;rsquo;ll open a backdoor path between net use and malaria risk and thus create endogeneity. It&amp;rsquo;ll be normally distributed around 50, with a standard deviation of 25.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Specify the relationships between the nodes based on the DAG equations.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are two models in the DAG:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;net ~ dist + U&lt;/code&gt;&lt;/strong&gt;: Net usage is determined by both distance and our magical unobserved risk factor column. Net use is technically binomial, but in order to change the likelihood of net use based on distance to town hall and unobserved stuff, we&amp;rsquo;ll do the fancy tricky stuff we did in the observational DAG section above: we&amp;rsquo;ll create a bed net score, increase or decrease that score based on risk factors and distance, scale that score to a 0-1 scale of probabilities, and then draw a binomial 0/1 outcome using those probabilities.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll say that a one kilometer increase in the distance to a town halls reduces the bed net score and a one point increase in risk factors reduces the bed net score.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mal ~ net + U&lt;/code&gt;&lt;/strong&gt;: Malaria risk is determined by both net usage and unkown stuff, or the magical column we&amp;rsquo;re calling &amp;ldquo;risk factors.&amp;rdquo; We&amp;rsquo;ll say that a one point increase in risk factors increases malaria risk, and that using a mosquito net causes a decrease of 10 points on average. That&amp;rsquo;s our causal effect.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Generate random columns that stand alone. Generate related columns using regression math. Consider adding random noise. This is an entirely trial and error process until you get numbers that look good. Rely &lt;em&gt;heavily&lt;/em&gt; on plots as you try different coefficients and parameters. Optionally rescale any columns that go out of reasonable bounds. If you rescale, you&amp;rsquo;ll need to tinker with the coefficients you used since the final effects will also get rescaled.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Fake data time! Here&amp;rsquo;s some heavily annotated code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Make this randomness consistent&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)
   
&lt;span style=&#34;color:#75715e&#34;&gt;# Simulate 1578 people (just for fun)&lt;/span&gt;
n_people &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1578&lt;/span&gt;
   
iv_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;tibble&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make an ID column (not necessary, but nice to have)&lt;/span&gt;
  id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_people,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate magical unobserved risk factor variable: normal, 500 ± 300&lt;/span&gt;
  risk_factors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;),
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate distance to town hall variable&lt;/span&gt;
  distance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Scale up distance to be 0.1-15 instead of 0-1&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(distance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(distance, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;))) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate net variable based on distance, risk factors, and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Note: These -40 and -2 effects are entirely made up and I got them through a&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# lot of trial and error and rerunning this stupid chunk dozens of times&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(net_score &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;-40&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; distance) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Distance effect&lt;/span&gt;
           (&lt;span style=&#34;color:#ae81ff&#34;&gt;-2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; risk_factors) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Risk factor effect&lt;/span&gt;
           &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(n_people, mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;),  &lt;span style=&#34;color:#75715e&#34;&gt;# Random noise&lt;/span&gt;
        net_probability &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(net_score, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)),
        &lt;span style=&#34;color:#75715e&#34;&gt;# Randomly generate a 0/1 variable using that probability&lt;/span&gt;
        net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbinom&lt;/span&gt;(n_people, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, net_probability)) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Generate malaria risk variable based on net use, risk factors, and random noise&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbeta&lt;/span&gt;(n_people, shape1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, shape2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
         &lt;span style=&#34;color:#75715e&#34;&gt;# We&amp;#39;re aiming for a -10 net effect, but need to boost it because of rescaling&lt;/span&gt;
         malaria_effect &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;-20&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; net) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; risk_factors),
         &lt;span style=&#34;color:#75715e&#34;&gt;# Make the final malaria risk score&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk_base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; malaria_effect,
         &lt;span style=&#34;color:#75715e&#34;&gt;# Rescale so it doesn&amp;#39;t go below 0&lt;/span&gt;
         malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rescale&lt;/span&gt;(malaria_risk, to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)))
iv_data
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1,578 x 9&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       id risk_factors distance net_score net_probability   net malaria_risk_base malaria_effect malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##    &amp;lt;int&amp;gt;        &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;             &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  1     1         69.8    3.98      -202.           0.766     1              71.1           14.9         36.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  2     2        107.     2.14      -284.           0.686     1              75.4           33.5         49.5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  3     3        127.     5.47      -469.           0.505     0              57.4           63.6         56.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  4     4         41.4    9.61      -414.           0.558     0              37.2           20.7         20.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  5     5        111.     4.66      -376.           0.596     0              38.5           55.4         40.9&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  6     6        113.     2.29      -284.           0.686     1              75.7           36.3         51.3&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  7     7         85.6    0.922     -215.           0.753     0              28.7           42.8         28.2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  8     8         86.3   12.5       -608.           0.368     1              50.6           23.2         29.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##  9     9         85.9    3.11      -267.           0.703     1              38.4           22.9         22.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 10    10         77.7    1.35      -157.           0.810     1              69.1           18.9         37.6&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## # ... with 1,568 more rows&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify all relationships with plots and models.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is there a relationship between unobserved risk factors and malaria risk? Yep.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(iv_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; risk_factors, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-risk-malaria-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Is there a relationship between distance to town hall and net use? Yeah, those who live further away are less likely to use a net.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(iv_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; distance, fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_density&lt;/span&gt;(alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-distance-net-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Is there a relationship between net use and malaria risk? Haha, yeah, that&amp;rsquo;s a huge highly significant effect. Probably too perfect. We could increase those error bars if we tinker with some of the numbers in the code, but for the sake of this example, we&amp;rsquo;ll leave them like this.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(iv_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net), y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; malaria_risk, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;as.factor&lt;/span&gt;(net))) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;stat_summary&lt;/span&gt;(geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pointrange&amp;#34;&lt;/span&gt;, fun.data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mean_se&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/check-net-risk-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Try it out!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cool, let&amp;rsquo;s see if this works. Remember, we can&amp;rsquo;t actually use the &lt;code&gt;risk_factors&lt;/code&gt; column in real life, but we will here just to make sure the effect we built in exists. Here&amp;rsquo;s the true effect, where using a net causes a decrease of 10.9 malaria risk points&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_forbidden &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; risk_factors, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iv_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_forbidden)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term         estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;           &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)    20.6     0.873        23.6 6.98e-106&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 net           -10.8     0.400       -27.1 3.93e-133&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 risk_factors    0.283   0.00788      35.9 1.16e-206&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Since we can&amp;rsquo;t actually use that column, we&amp;rsquo;ll use distance to town hall as an instrument. We should run this set of models:&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\widehat{\text{Net}} &amp;amp;= \gamma_0 + \gamma_1 \text{Distance to town hall} + \omega \\&lt;br&gt;
\text{Malaria risk} &amp;amp;= \beta_0 + \beta_1 \widehat{\text{Net}} + \epsilon
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll run this 2SLS model with the &lt;code&gt;iv_robust()&lt;/code&gt; function from the &lt;strong&gt;estimatr&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(estimatr)
   
model_iv &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;iv_robust&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; distance, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iv_data)
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_iv)
&lt;span style=&#34;color:#75715e&#34;&gt;##          term estimate std.error statistic    p.value conf.low conf.high   df      outcome&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)   47.202     1.576     29.95 2.344e-156    44.11    50.294 1576 malaria_risk&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2         net   -8.236     2.474     -3.33  8.889e-04   -13.09    -3.385 1576 malaria_risk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;…and it&amp;rsquo;s relatively close, I guess, at −8.2. Getting instrumental variables to find exact causal effects is tricky, but I&amp;rsquo;m fine with this for simulated data.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Save the data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The data works well enough, so we&amp;rsquo;ll get rid of the extra intermediate columns and save it as a CSV file. We&amp;rsquo;ll keep the forbidden &lt;code&gt;risk_factors&lt;/code&gt; column just for fun.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;iv_data_final &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; iv_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;select&lt;/span&gt;(id, net, distance, malaria_risk, risk_factors)
   
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(iv_data_final)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##      id   net distance malaria_risk risk_factors&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     1     1     3.98         36.5         69.8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2     2     1     2.14         49.5        107. &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3     3     0     5.47         56.4        127. &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4     4     0     9.61         20.4         41.4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5     5     0     4.66         40.9        111. &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6     6     1     2.29         51.3        113.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Save data&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;write_csv&lt;/span&gt;(iv_data_final, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/bed_nets_iv.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;use-synthetic-data-packages&#34;&gt;Use synthetic data packages&lt;/h2&gt;
&lt;p&gt;There are several R packages that let you generate synthetic data with built-in relationships in a more automatic way. They all work a little differently, and if you&amp;rsquo;re interested in trying them out, make sure you check the documentation for details.&lt;/p&gt;
&lt;h3 id=&#34;fabricatr&#34;&gt;fabricatr&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://declaredesign.org/r/fabricatr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;fabricatr&lt;/strong&gt; package&lt;/a&gt; is a very powerful package for simulating data. It was invented specifically for using in preregistered studies, so it can handle a ton of different data structures like &lt;a href=&#34;https://declaredesign.org/r/fabricatr/articles/cross_classified.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;panel data&lt;/a&gt; and &lt;a href=&#34;https://declaredesign.org/r/fabricatr/articles/time_series.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;time series data&lt;/a&gt;. You can build in causal effects and force columns to be correlated with each other.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;fabricatr&lt;/strong&gt; has exceptionally well-written documentation with like a billion detailed examples (see &lt;a href=&#34;https://declaredesign.org/r/fabricatr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the right sidebar here&lt;/a&gt;). This is a gold standard package and you should most definitely check it out.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a simple example of simulating a bunch of voters and making older ones more likely to vote:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(fabricatr)
&lt;span style=&#34;color:#75715e&#34;&gt;## Warning: package &amp;#39;fabricatr&amp;#39; was built under R version 4.0.5&lt;/span&gt;

&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

fake_voters &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fabricate&lt;/span&gt;(
  &lt;span style=&#34;color:#75715e&#34;&gt;# Make 100 people&lt;/span&gt;
  N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
  &lt;span style=&#34;color:#75715e&#34;&gt;# Age uniformly distributed between 18 and 85&lt;/span&gt;
  age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;round&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;runif&lt;/span&gt;(N, &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;85&lt;/span&gt;)),
  &lt;span style=&#34;color:#75715e&#34;&gt;# Older people more likely to vote&lt;/span&gt;
  turnout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;draw_binary&lt;/span&gt;(prob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(age &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;), N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; N)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(fake_voters)
&lt;span style=&#34;color:#75715e&#34;&gt;##    ID age turnout&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 001  26       0&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 002  60       1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 003  59       1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 004  60       1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 005  76       1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 006  61       1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And here&amp;rsquo;s an example of country-year panel data where there are country-specific and year-specific effects on GDP:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

panel_global_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fabricate&lt;/span&gt;(
  years &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add_level&lt;/span&gt;(
    N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,
    ts_year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,
    year_shock &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(N, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;)
  ),
  countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;add_level&lt;/span&gt;(
    N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
    base_gdp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;runif&lt;/span&gt;(N, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;),
    growth_units &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;runif&lt;/span&gt;(N, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;),
    growth_error &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;runif&lt;/span&gt;(N, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;),
    nest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;
  ),
  country_years &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cross_levels&lt;/span&gt;(
    by &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;join&lt;/span&gt;(years, countries),
    gdp_measure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base_gdp &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; year_shock &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (ts_year &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; growth_units) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
      &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(N, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; growth_error)
  )
) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Scale up the years to be actual years instead of 1, 2, 3, etc.&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;mutate&lt;/span&gt;(year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ts_year &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2010&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(panel_global_data)
&lt;span style=&#34;color:#75715e&#34;&gt;##   years ts_year year_shock countries base_gdp growth_units growth_error country_years gdp_measure year&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1    01       0   -0.36212         1    17.22       0.4526       0.3096            01       17.07 2010&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2    02       1    0.08323         1    17.22       0.4526       0.3096            02       17.55 2011&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3    03       2    0.32533         1    17.22       0.4526       0.3096            03       18.72 2012&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4    04       3   -0.70371         1    17.22       0.4526       0.3096            04       17.99 2013&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5    05       4    0.12874         1    17.22       0.4526       0.3096            05       19.25 2014&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6    06       5    0.15182         1    17.22       0.4526       0.3096            06       19.63 2015&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(panel_global_data, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gdp_measure, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_line&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Year&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Log GDP&amp;#34;&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Countries&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/01-datos_files/figure-html/fake-panel-data-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That all just scratches the surface of what &lt;strong&gt;fabricatr&lt;/strong&gt; can do. Again, check the examples and documentation and play around with it to see what else it can do.&lt;/p&gt;
&lt;h3 id=&#34;wakefield&#34;&gt;wakefield&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/trinker/wakefield&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;wakefield&lt;/strong&gt; package&lt;/a&gt; is jokingly named after &lt;a href=&#34;https://en.wikipedia.org/wiki/Andrew_Wakefield&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Andrew Wakefield&lt;/a&gt;, the British researcher who invented fake data to show that the MMR vaccine causes autism. This package lets you quickly generate random fake datasets. It has a bunch of pre-set column possibilities, like age, color, Likert scales, political parties, religion, and so on, and you can also use standard R functions like &lt;code&gt;rnorm()&lt;/code&gt;, &lt;code&gt;rbinom()&lt;/code&gt;, or &lt;code&gt;rbeta()&lt;/code&gt;. It also lets you create repeated measures (1st grade score, 2nd grade score, 3rd grade score, etc.) and build correlations between variables.&lt;/p&gt;
&lt;p&gt;You should &lt;em&gt;definitely&lt;/em&gt; &lt;a href=&#34;https://github.com/trinker/wakefield&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;look at the documentation&lt;/a&gt; to see a ton of examples of how it all works. Here&amp;rsquo;s a basic example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(wakefield)

&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

wakefield_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;r_data_frame&lt;/span&gt;(
  n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
  id,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rbinom&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;),  &lt;span style=&#34;color:#75715e&#34;&gt;# 30% chance of being in treatment&lt;/span&gt;
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm&lt;/span&gt;(mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;),
  race,
  age &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;age&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;),
  sex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sex_inclusive&lt;/span&gt;(),
  survey_question_1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;likert&lt;/span&gt;(),
  survey_question_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;likert&lt;/span&gt;()
)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(wakefield_data)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 8&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   ID    treatment outcome Race       age sex      survey_question_1 survey_question_2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;     &amp;lt;int&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;    &amp;lt;ord&amp;gt;             &amp;lt;ord&amp;gt;            &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 001           0    544. White       35 Intersex Disagree          Agree            &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 002           0    606. White       38 Male     Disagree          Strongly Disagree&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 003           0    545. White       38 Female   Neutral           Strongly Agree   &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 004           0    566. Black       45 Female   Strongly Agree    Disagree         &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 005           1    386. Black       41 Male     Disagree          Agree            &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 006           0    463. Hispanic    20 Female   Disagree          Agree&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;faux&#34;&gt;faux&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&#34;https://debruine.github.io/faux/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;faux&lt;/strong&gt; package&lt;/a&gt; does some really neat things. We can create data that has built-in correlations without going through all the math. For instance, let&amp;rsquo;s say we have 3 variables A, B, and C that are normally distributed with these parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;: mean = 10, sd = 2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;: mean = 5, sd = 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;: mean = 20, sd = 5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We want A to correlate with B at r = 0.8 (highly correlated), A to correlate with C at r = 0.3 (less correlated), and B to correlate with C at r = 0.4 (moderately correlated). Here&amp;rsquo;s how to create that data with &lt;strong&gt;faux&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(faux)

&lt;span style=&#34;color:#a6e22e&#34;&gt;set.seed&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1234&lt;/span&gt;)

faux_data &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rnorm_multi&lt;/span&gt;(n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,
                         mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;),
                         sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;),
                         r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;),
                         varnames &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;),
                         empirical &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;)
&lt;span style=&#34;color:#a6e22e&#34;&gt;head&lt;/span&gt;(faux_data)
&lt;span style=&#34;color:#75715e&#34;&gt;##        A     B     C&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 11.742 5.612 25.89&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2  9.060 4.177 18.79&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3  9.373 4.466 14.57&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 10.913 5.341 31.88&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5  8.221 4.039 18.14&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 10.095 4.517 17.43&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Check averages and standard deviations&lt;/span&gt;
faux_data &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# Convert to long/tidy so we can group and summarize&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;pivot_longer&lt;/span&gt;(cols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;everything&lt;/span&gt;(), names_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;variable&amp;#34;&lt;/span&gt;, values_to &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(variable) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;mean&lt;/span&gt;(value),
            sd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sd&lt;/span&gt;(value))
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 3&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   variable  mean    sd&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 A        10.2   2.08&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 B         5.02  1.00&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 C        20.8   5.01&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Check correlations&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;A, faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;B)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.808&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;A, faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;C)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.301&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;B, faux_data&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;C)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.4598&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;faux&lt;/strong&gt; can do a ton of other things too, so make sure you check out &lt;a href=&#34;https://debruine.github.io/faux/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;the documentation and all the articles with examples here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Importar, explorar y limpiar datos</title>
      <link>/example/03-practico/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/example/03-practico/</guid>
      <description>&lt;h2 id=&#34;dags-with-dagittynet&#34;&gt;DAGs with dagitty.net&lt;/h2&gt;
&lt;p&gt;The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This video shows how to use it:&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/3euqrnD9w7c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;dags-with-r-ggdag-and-dagitty&#34;&gt;DAGs with R, ggdag, and dagitty&lt;/h2&gt;
&lt;p&gt;You can use the &lt;a href=&#34;https://ggdag.malco.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;ggdag&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;http://dagitty.net/primer/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;dagitty&lt;/strong&gt;&lt;/a&gt; packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it&amp;rsquo;s more official and formal and reproducible.&lt;/p&gt;
&lt;h3 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h3&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/uoAjyyToUTE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h3 id=&#34;basic-dags&#34;&gt;Basic DAGs&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load packages&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)  &lt;span style=&#34;color:#75715e&#34;&gt;# For dplyr, ggplot, and friends&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(ggdag)      &lt;span style=&#34;color:#75715e&#34;&gt;# For plotting DAGs&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(dagitty)    &lt;span style=&#34;color:#75715e&#34;&gt;# For working with DAG logic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The general process for making and working with DAGs in R is to create a DAG object with &lt;code&gt;dagify()&lt;/code&gt; and then plot it with &lt;code&gt;ggdag()&lt;/code&gt;. The documentation for &lt;strong&gt;ggdag&lt;/strong&gt; is really good and helpful and full of examples. Check these pages for all sorts of additional details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-ggdag.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to ggdag&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/articles/intro-to-dags.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;An introduction to directed acyclic graphs&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ggdag.malco.io/reference/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;List of all ggdag-related functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The syntax for &lt;code&gt;dagify()&lt;/code&gt; is similar to the formula syntax you&amp;rsquo;ve been using for building regression models with &lt;code&gt;lm()&lt;/code&gt;. The formulas you use in &lt;code&gt;dagify()&lt;/code&gt; indicate the relationships between nodes.&lt;/p&gt;
&lt;p&gt;For instance, in this DAG, &lt;code&gt;y&lt;/code&gt; is caused by &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;y ~ x + a + b&lt;/code&gt;), and &lt;code&gt;x&lt;/code&gt; is caused by &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;x ~ a + b&lt;/code&gt;). This means that &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are confounders. Use the &lt;code&gt;exposure&lt;/code&gt; and &lt;code&gt;outcome&lt;/code&gt; arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create super basic DAG&lt;/span&gt;
simple_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#75715e&#34;&gt;# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/super-basic-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you want to plot which nodes are the exposure and outcome, use &lt;code&gt;ggdag_status()&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/simple-status-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;layouts-and-manual-coordinates&#34;&gt;Layouts and manual coordinates&lt;/h3&gt;
&lt;p&gt;Notice how the layout is different in both of those graphs. By default, &lt;code&gt;ggdag()&lt;/code&gt; positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the &lt;code&gt;layout&lt;/code&gt; argument: &lt;code&gt;ggdag(simple_dag, layout = &amp;quot;nicely&amp;quot;)&lt;/code&gt;. You can see a full list of possible algorithms by running &lt;code&gt;?layout_tbl_graph_igraph&lt;/code&gt; in the console.&lt;/p&gt;
&lt;p&gt;Alternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the &lt;code&gt;coords&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; go in the middle row (row 2) while &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; go in the middle column (column 2). It can also be helpful to not include &lt;code&gt;theme_dag()&lt;/code&gt; at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add &lt;code&gt;theme_dag()&lt;/code&gt; to clean it up.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/dag-with-coords-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;node-names-and-labels&#34;&gt;Node names and labels&lt;/h3&gt;
&lt;p&gt;The variable names you use do not have to be limited to just &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and other lowercase letters. You can any names you want, as long as there are no spaces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;dag_with_var_names &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; treatment &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  treatment &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; confounder1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; confounder2,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;treatment&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;outcome&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(dag_with_var_names) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/dag-with-names-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the &lt;code&gt;labels&lt;/code&gt; argument in &lt;code&gt;dagify()&lt;/code&gt;. Plot the labels by setting &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;. You can turn off the text in the nodes with &lt;code&gt;text = FALSE&lt;/code&gt; in &lt;code&gt;ggdag()&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;simple_dag_with_coords_and_labels &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  y &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  x &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;,
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Outcome&amp;#34;&lt;/span&gt;, x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Treatment&amp;#34;&lt;/span&gt;,
             a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 1&amp;#34;&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Confounder 2&amp;#34;&lt;/span&gt;),
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(simple_dag_with_coords_and_labels,
             use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/dag-with-labels-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;paths-and-adjustment-sets&#34;&gt;Paths and adjustment sets&lt;/h3&gt;
&lt;p&gt;R can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. For this simple DAG, there is only one: &lt;code&gt;a&lt;/code&gt; should be independent of &lt;code&gt;b&lt;/code&gt;. If we had a dataset with columns for each of these variables, we could check if this is true by running &lt;code&gt;cor(a, b)&lt;/code&gt; to see if the two are related.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## a _||_ b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can also find all the paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; using the &lt;code&gt;paths()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; package. We can see that there are three open paths between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;paths&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## $paths&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] &amp;#34;x -&amp;gt; y&amp;#34;      &amp;#34;x &amp;lt;- a -&amp;gt; y&amp;#34; &amp;#34;x &amp;lt;- b -&amp;gt; y&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## $open&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] TRUE TRUE TRUE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The first open path is fine—we want a single &lt;em&gt;d&lt;/em&gt;-connected relationship between treatment and outcome—but the other two indicate that there is confounding from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. We can see what each of these paths are with the &lt;code&gt;ggdag_paths()&lt;/code&gt; function from the &lt;strong&gt;ggdag&lt;/strong&gt; package:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_paths&lt;/span&gt;(simple_dag_with_coords) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/plot-dag-paths-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of listing out all the possible paths and identifying backdoors by hand, you can use the &lt;code&gt;adjustmentSets()&lt;/code&gt; function in the &lt;strong&gt;dagitty&lt;/strong&gt; package to programmatically find all the nodes that need to be adjusted. Here we see that both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; need to be controlled for to isolate the &lt;code&gt;x -&amp;gt; y&lt;/code&gt; relationship.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(simple_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { a, b }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also visualize the adjustment sets with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt; in the &lt;strong&gt;ggdag&lt;/strong&gt; package. Make sure you set &lt;code&gt;shadow = TRUE&lt;/code&gt; to draw the arrows coming out of the adjusted nodes—by default, those are not included.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(simple_dag_with_coords, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/plot-adjustment-sets-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;R will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. In this example DAG there was only one set of variables (&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.&lt;/p&gt;
&lt;h3 id=&#34;plot-dag-from-dagittynet-with-ggdag&#34;&gt;Plot DAG from dagitty.net with &lt;code&gt;ggdag()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you use &lt;a href=&#34;http://dagitty.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dagitty.net&lt;/a&gt; to draw a DAG, you&amp;rsquo;ll notice that it generates some code for you in the model code section:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/dagitty-code.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;You can copy that &lt;code&gt;dag{ ... }&lt;/code&gt; code and paste it into R to define a DAG object rather than use the &lt;code&gt;dagify()&lt;/code&gt; function. To do this, use the &lt;code&gt;dagitty()&lt;/code&gt; function from the &lt;strong&gt;dagitty&lt;/strong&gt; library and include the whole generated model code in single quotes (&lt;code&gt;&#39;&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.809,0.306&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.810,0.529&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.918,0.432&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.681,0.426&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag&lt;/span&gt;(model_from_dagitty) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/code-from-dagitty-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default it&amp;rsquo;s going to look ugly because (1) the node labels don&amp;rsquo;t fit, and (2) slight differences in the coordinates make it so the nodes don&amp;rsquo;t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they&amp;rsquo;re all 0.3, 0.8, etc.&lt;/p&gt;
&lt;p&gt;To fix the label issue, you can add the &lt;code&gt;use_labels&lt;/code&gt; argument like normally. Only here, you can&amp;rsquo;t specify &lt;code&gt;use_labels = &amp;quot;label&amp;quot;&lt;/code&gt;. Instead, when you specify a DAG using dagitty&amp;rsquo;s code like this, the column in the underlying dataset that contains the labels is named &lt;code&gt;name&lt;/code&gt;, so you need to use &lt;code&gt;use_labels = &amp;quot;name&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other &lt;code&gt;ggdag()&lt;/code&gt; variations like &lt;code&gt;ggdag_status()&lt;/code&gt; will still work fine.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_from_dagitty_rounded &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagitty&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dag {
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bb=&amp;#34;0,0,1,1&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; [pos=&amp;#34;0.8,0.3&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; [pos=&amp;#34;0.8,0.5&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some outcome&amp;#34; [outcome,pos=&amp;#34;0.9,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; [exposure,pos=&amp;#34;0.7,0.4&amp;#34;]
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Another confounder&amp;#34; -&amp;gt; &amp;#34;Some treatment&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Some treatment&amp;#34; -&amp;gt; &amp;#34;Some outcome&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(model_from_dagitty_rounded, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Turn off legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/code-from-dagitty-better-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;mosquito-net-example&#34;&gt;Mosquito net example&lt;/h2&gt;
&lt;h3 id=&#34;conditional-independencies&#34;&gt;Conditional independencies&lt;/h3&gt;
&lt;p&gt;You can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the &amp;ldquo;Testable implications&amp;rdquo; section. To show how this works, we&amp;rsquo;ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Researchers are interested in whether using mosquito nets decreases an individual&amp;rsquo;s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household&amp;rsquo;s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;mosquito_dag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;dagify&lt;/span&gt;(
  malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; resistance,
  net &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eligible &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  eligible &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; household,
  health &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; income,
  exposure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net&amp;#34;&lt;/span&gt;,
  outcome &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;malaria_risk&amp;#34;&lt;/span&gt;,
  coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8.5&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
                y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                      temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)),
  labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Risk of malaria&amp;#34;&lt;/span&gt;, net &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mosquito net&amp;#34;&lt;/span&gt;, income &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Income&amp;#34;&lt;/span&gt;,
             health &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Health&amp;#34;&lt;/span&gt;, temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nighttime temperatures&amp;#34;&lt;/span&gt;,
             resistance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Insecticide resistance&amp;#34;&lt;/span&gt;,
             eligible &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Eligible for program&amp;#34;&lt;/span&gt;, household &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Number in household&amp;#34;&lt;/span&gt;)
)

&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_status&lt;/span&gt;(mosquito_dag, use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;guides&lt;/span&gt;(fill &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# Disable the legend&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/build-mosquito-dag-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The causal graph above  outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Malaria risk (&lt;code&gt;malaria_risk&lt;/code&gt;): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.&lt;/li&gt;
&lt;li&gt;Mosquito net (&lt;code&gt;net&lt;/code&gt; and &lt;code&gt;net_num&lt;/code&gt;): A binary variable indicating if the household used mosquito nets.&lt;/li&gt;
&lt;li&gt;Eligible for program (&lt;code&gt;eligible&lt;/code&gt;): A binary variable indicating if the household is eligible for the free net program.&lt;/li&gt;
&lt;li&gt;Income (&lt;code&gt;income&lt;/code&gt;): The household&amp;rsquo;s monthly income, in US dollars.&lt;/li&gt;
&lt;li&gt;Nighttime temperatures (&lt;code&gt;temperature&lt;/code&gt;): The average temperature at night, in Celsius.&lt;/li&gt;
&lt;li&gt;Health (&lt;code&gt;health&lt;/code&gt;): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.&lt;/li&gt;
&lt;li&gt;Number in household (&lt;code&gt;household&lt;/code&gt;): Number of people living in the household.&lt;/li&gt;
&lt;li&gt;Insecticide resistance (&lt;code&gt;resistance&lt;/code&gt;): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;According to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s download the dataset, put in a folder named &lt;code&gt;data&lt;/code&gt;, and load it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/data/mosquito_nets.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;mosquito_nets.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;mosquito_nets.csv&amp;#34; object in the&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Environment panel in RStudio to see what the data looks like after you load it&lt;/span&gt;
mosquito_nets &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/mosquito_nets.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use this data to check if the relationships defined by our DAG reflect reality. Recall that &lt;em&gt;d&lt;/em&gt;-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run &lt;code&gt;impliedConditionalIndependencies()&lt;/code&gt; in R, you can see a list of all the implied conditional independencies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;impliedConditionalIndependencies&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ hlth | incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## elgb _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ hshl&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hlth _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ incm&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ mlr_ | hlth, incm, net, tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## hshl _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## incm _||_ tmpr&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## net _||_ rsst&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## rsst _||_ tmpr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;_||_&lt;/code&gt; symbol in the output here is the &lt;code&gt;\(\perp\)&lt;/code&gt; symbol, which means &amp;ldquo;independent of&amp;rdquo;. The &lt;code&gt;|&lt;/code&gt; in the output means &amp;ldquo;given&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;In the interest of space, we will not verify all these implied independencies, but we can test a few of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Health} \perp \text{Household members}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Health is independent of household member count&amp;rdquo;&lt;/em&gt;.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;health, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;household)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 9.8e-05&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Income} \perp \text{Insecticide resistance}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Income is independent of insecticide resistance&amp;rdquo;&lt;/em&gt;.) Income should be independent of insecticide resistance. This is again true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;income, mosquito_nets&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;resistance)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.014&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;\(\text{Malaria risk} \perp \text{Household members}\ |\ \text{Health, Income, Bed net use, Temperature}\)&lt;/code&gt;: (Read as &lt;em&gt;&amp;ldquo;Malaria risk is independent of house member count given health, income, bed net use, and temperature&amp;rdquo;&lt;/em&gt;.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use &lt;code&gt;cor()&lt;/code&gt; to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant ($t = -0.17$, &lt;code&gt;\(p = 0.863\)&lt;/code&gt;), which means the two are independent, as expected.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(malaria_risk &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; household &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; health &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; income &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; net &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; temperature,
   data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mosquito_nets) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  broom&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;()
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 6 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic   p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  76.2      0.966      78.9   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 household    -0.0155   0.0893     -0.173 8.63e-  1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 health        0.148    0.0107     13.9   9.75e- 42&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 income       -0.0751   0.00104   -72.6   0.       &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 6 temperature   1.01     0.0310     32.5   1.88e-181&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.&lt;/p&gt;
&lt;h3 id=&#34;mosquito-net-adjustment-sets&#34;&gt;Mosquito net adjustment sets&lt;/h3&gt;
&lt;p&gt;There is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run &lt;code&gt;paths(mosquito_dag)&lt;/code&gt; to see these results), or we can let R find the appropriate adjustment sets automatically:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;adjustmentSets&lt;/span&gt;(mosquito_dag)
&lt;span style=&#34;color:#75715e&#34;&gt;## { health, income, temperature }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Based on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not &lt;em&gt;d&lt;/em&gt;-connected to malaria risk. We only need to worry about confounding relationships.&lt;/p&gt;
&lt;p&gt;We can confirm this graphically with &lt;code&gt;ggdag_adjustment_set()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggdag_adjustment_set&lt;/span&gt;(mosquito_dag, shadow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;,
                     use_labels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;, text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;theme_dag&lt;/span&gt;()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/03-practico_files/figure-html/plot-mosquito-adjustment-fake-1.png&#34; width=&#34;75%&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bienvenido/a a R, RStudio y tidyverse</title>
      <link>/example/02-practico/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/example/02-practico/</guid>
      <description>&lt;script src=&#34;/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;p&gt;If you want to follow along with this example, you can download the data below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/projects/regression-example/data/sat_gpa.csv&#34;&gt;&lt;i class=&#34;fas fa-table&#34;&gt;&lt;/i&gt; &lt;code&gt;sat_gpa.csv&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also download a complete &lt;code&gt;.zip&lt;/code&gt; file with a finished R Markdown file that you can knit and play with on your own:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/projects/regression-example.zip&#34;&gt;&lt;i class=&#34;fas fa-file-archive&#34;&gt;&lt;/i&gt; &lt;code&gt;regression-example.zip&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;live-coding-example&#34;&gt;Live coding example&lt;/h2&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/E-Zz5S5NOUo&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;complete-code&#34;&gt;Complete code&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;(This is a heavily cleaned up and annotated version of the code from the video.)&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;SAT scores have long been a major factor in college admissions, under the assumption that students with higher test scores will perform better in college and receive a higher GPA. The SAT&amp;rsquo;s popularity &lt;a href=&#34;https://www.washingtonpost.com/news/answer-sheet/wp/2017/04/12/the-list-of-test-optional-colleges-and-universities-keeps-growing-despite-college-boards-latest-jab/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;has dropped in recent years&lt;/a&gt;, though, and this summer, the &lt;a href=&#34;http://www.chicagotribune.com/news/local/breaking/ct-university-chicago-sat-act-20180614-story.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;University of Chicago announced that it would stop requiring SAT scores for all prospective undergraduates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Educational Testing Service (ETS), the creator of the SAT, collected SAT scores, high school GPAs, and freshman-year-college GPAs for 1,000 students at an unnamed university.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;You are a university admissions officer and you are curious if SAT scores really do predict college performance. You&amp;rsquo;re also interested in other factors that could influence student performance.&lt;/p&gt;
&lt;p&gt;The data contains 6 variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sex&lt;/code&gt;: The sex of the student (male or female; female is the base case)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sat_verbal&lt;/code&gt;: The student&amp;rsquo;s &lt;em&gt;percentile&lt;/em&gt; score in the verbal section of the SAT&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sat_math&lt;/code&gt;: The student&amp;rsquo;s &lt;em&gt;percentile&lt;/em&gt; score in the math section of the SAT&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sat_total&lt;/code&gt;: &lt;code&gt;sat_verbal&lt;/code&gt; + &lt;code&gt;sat_math&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpa_hs&lt;/code&gt;: The student&amp;rsquo;s GPA in high school at graduation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gpa_fy&lt;/code&gt;: The student&amp;rsquo;s GPA at the end of their freshman year&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# First we load the libraries and data&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(tidyverse)     &lt;span style=&#34;color:#75715e&#34;&gt;# This lets you create plots with ggplot, manipulate data, etc.&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(broom)         &lt;span style=&#34;color:#75715e&#34;&gt;# This lets you convert regression models into nice tables&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;library&lt;/span&gt;(modelsummary)  &lt;span style=&#34;color:#75715e&#34;&gt;# This lets you combine multiple regression models into a single table&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Load the data.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# It&amp;#39;d be a good idea to click on the &amp;#34;sat_gpa&amp;#34; object in the Environment panel&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# in RStudio to see what the data looks like after you load it.&lt;/span&gt;
sat_gpa &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;read_csv&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/sat_gpa.csv&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;exploratory-questions&#34;&gt;Exploratory questions&lt;/h3&gt;
&lt;h4 id=&#34;how-well-do-sat-scores-correlate-with-freshman-gpa&#34;&gt;How well do SAT scores correlate with freshman GPA?&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Note the syntax here with the $. That lets you access columns. The general&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# pattern is name_of_data_set$name_of_column&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(sat_gpa&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;gpa_fy, sat_gpa&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;sat_total)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.46&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SAT scores and first-year college GPA are moderately positively correlated (r = 0.46). As one goes up, the other also tends to go up.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what that relationship looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(sat_gpa, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_total, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa_fy)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Total SAT score&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Freshman GPA&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/02-practico_files/figure-html/plot-sat-gpa-correlation-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;how-well-does-high-school-gpa-correlate-with-freshman-gpa&#34;&gt;How well does high school GPA correlate with freshman GPA?&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(sat_gpa&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;gpa_fy, sat_gpa&lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;gpa_hs)
&lt;span style=&#34;color:#75715e&#34;&gt;## [1] 0.54&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;High school and freshman GPAs are also moderately correlated (r = 0.54), but with a slightly stronger relationship.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s what that relationship looks like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(sat_gpa, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa_hs, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa_fy)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;High school GPA&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Freshman GPA&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/02-practico_files/figure-html/plot-hs-gpa-correlation-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;is-the-correlation-between-sat-scores-and-freshman-gpa-stronger-for-men-or-for-women&#34;&gt;Is the correlation between SAT scores and freshman GPA stronger for men or for women?&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# We can calculate the correlation for subgroups within the data with slightly&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# different syntax. Notice how this uses the pipe (%&amp;gt;%), which makes it read&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# like English. We can say &amp;#34;Take the sat_gpa data set, split it into groups&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# based on sex, and calculate the correlation between sat_total and gpa_fy in&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# each of the groups&lt;/span&gt;
sat_gpa &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(sex) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(correlation &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(sat_total, gpa_fy))
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   sex    correlation&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 Female       0.493&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 Male         0.481&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can calculate the correlation between SAT scores and freshman GPA for both sexes to see if there are any differences. The correlation is slightly stronger for women, but it&amp;rsquo;s hardly noticeable (r = 0.49 for females, r = 0.48 for males)&lt;/p&gt;
&lt;p&gt;This is apparent visually if we include a trendline for each sex. The lines are essentially parallel:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# The only difference between this graph and the earlier two is that it is&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# coloring by sex&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;ggplot&lt;/span&gt;(sat_gpa, &lt;span style=&#34;color:#a6e22e&#34;&gt;aes&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa_hs, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpa_fy, color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sex)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_point&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;geom_smooth&lt;/span&gt;(method &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lm&amp;#34;&lt;/span&gt;, se &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FALSE&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;labs&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;High school GPA&amp;#34;&lt;/span&gt;, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Freshman GPA&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;/example/02-practico_files/figure-html/plot-sat-gpa-correlation-sex-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;is-the-correlation-between-high-school-gpa-and-freshman-gpa-stronger-for-men-or-for-women&#34;&gt;Is the correlation between high school GPA and freshman GPA stronger for men or for women?&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;sat_gpa &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;group_by&lt;/span&gt;(sex) &lt;span style=&#34;color:#f92672&#34;&gt;%&amp;gt;%&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;summarize&lt;/span&gt;(correlation &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cor&lt;/span&gt;(gpa_hs, gpa_fy))
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 2&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   sex    correlation&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;        &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 Female       0.597&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 Male         0.483&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There is a noticeable difference between men and women in the correlation between high school and college GPA. For men, the two are moderately correlated (r = 0.48), while for women the relationship is much stronger (r = 0.60). High school grades might be a better predictor of college grades for women than for men.&lt;/p&gt;
&lt;h3 id=&#34;models&#34;&gt;Models&lt;/h3&gt;
&lt;h4 id=&#34;do-sat-scores-predict-freshman-gpas&#34;&gt;Do SAT scores predict freshman GPAs?&lt;/h4&gt;
&lt;p&gt;We can build a model that predicts college GPAs (our outcome variable, or dependent variable) using SAT scores (our main explanatory variable):&lt;/p&gt;
&lt;p&gt;$$
\text{freshman GPA} = \beta_0 + \beta_1 \text{SAT total} + \epsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sat_gpa &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(gpa_fy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; sat_total, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_gpa)

&lt;span style=&#34;color:#75715e&#34;&gt;# Look at the model results and include confidence intervals for the coefficients&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sat_gpa, conf.int &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value conf.low conf.high&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  0.00193   0.152      0.0127 9.90e- 1  -0.296     0.300 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 sat_total    0.0239    0.00146   16.4    1.39e-53   0.0210    0.0267&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s what these coefficients mean:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The intercept (or &lt;code&gt;\(\beta_0\)&lt;/code&gt;) is 0.002, which means that the average freshman GPA will be 0.002 when the total SAT percentile score is 0. This is a pretty nonsensical number (nobody has a score that low), so we can ignore it.&lt;/li&gt;
&lt;li&gt;The slope of &lt;code&gt;sat_total&lt;/code&gt; (or &lt;code&gt;\(\beta_1\)&lt;/code&gt;) is 0.024, which means that a 1 percentile increase in SAT score is associated with a 0.024 point increase in GPA, on average.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can look at the summary table of the regression to check the &lt;code&gt;\(R^2\)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glance&lt;/span&gt;(model_sat_gpa)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1 x 12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC deviance df.residual  nobs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     0.212         0.211 0.658      268. 1.39e-53     1  -999. 2005. 2019.     432.         998  1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;\(R^2\)&lt;/code&gt; here is 0.212, which means that SAT scores explain 21% of the variation in freshman GPA. It&amp;rsquo;s not a fantastic model, but it explains some stuff.&lt;/p&gt;
&lt;h4 id=&#34;does-a-certain-type-of-sat-score-have-a-larger-effect-on-freshman-gpas&#34;&gt;Does a certain type of SAT score have a larger effect on freshman GPAs?&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;sat_total&lt;/code&gt; variable combines both &lt;code&gt;sat_math&lt;/code&gt; and &lt;code&gt;sat_verbal&lt;/code&gt;. We can disaggregate the total score to see the effect of each portion of the test on freshman GPA, using the following model:&lt;/p&gt;
&lt;p&gt;$$
\text{freshman GPA} = \beta_0 + \beta_1 \text{SAT verbal} + \beta_2 \text{SAT math} + \epsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sat_gpa_types &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(gpa_fy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; sat_verbal &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sat_math, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_gpa)

&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sat_gpa_types, conf.int &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value conf.low conf.high&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  0.00737   0.152      0.0484 9.61e- 1  -0.291     0.306 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 sat_verbal   0.0254    0.00286    8.88   3.07e-18   0.0198    0.0310&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 sat_math     0.0224    0.00279    8.04   2.58e-15   0.0169    0.0279&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, the intercept is meaningless since no student has a zero on both the verbal and the math test. The slope for &lt;code&gt;sat_verbal&lt;/code&gt; (or &lt;code&gt;\(\beta_1\)&lt;/code&gt;) is 0.025, so a one percentile point increase in the verbal SAT is associated with a 0.025 point increase in GPA, on average, controlling for math scores. Meanwhile, a one percentile point increase in the math SAT ($\beta_2$) is associated with a 0.022 point increase in GPA, on average, controlling for verbal scores. These are essentially the same, so at first glance, it doesn&amp;rsquo;t seem like the type of test has substantial bearing on college GPAs.&lt;/p&gt;
&lt;p&gt;The adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; (which we need to look at because we&amp;rsquo;re using more than one explanatory variable) is 0.211, which means that this model explains 21% of the variation in college GPA. Like before, this isn&amp;rsquo;t great, but it tells us a little bit about the importance of SAT scores.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glance&lt;/span&gt;(model_sat_gpa_types)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1 x 12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC deviance df.residual  nobs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     0.212         0.211 0.658      134. 2.36e-52     2  -999. 2006. 2026.     432.         997  1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;do-high-school-gpas-predict-freshman-gpas&#34;&gt;Do high school GPAs predict freshman GPAs?&lt;/h4&gt;
&lt;p&gt;We can also use high school GPA to predict freshman GPA, using the following model:&lt;/p&gt;
&lt;p&gt;$$
\text{freshman GPA} = \beta_0 + \beta_1 \text{high school GPA} + \epsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sat_gpa_hs &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(gpa_fy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; gpa_hs, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_gpa)

&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sat_gpa_hs)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 2 x 5&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)   0.0913    0.118      0.775 4.39e- 1&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 gpa_hs        0.743     0.0363    20.4   6.93e-78&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The intercept here ($\beta_0$) is 0.091, which means that a student with a high school GPA of zero would have a predicted freshman GPA of 0.091, on average. This is nonsensical, so we can ignore it. The slope for &lt;code&gt;gpa_hs&lt;/code&gt; ($\beta_1$), on the other hand, is helpful. For every 1 point increase in GPA (i.e. moving from 2.0 to 3.0, or 3.0 to 4.0), there&amp;rsquo;s an associated increase in college GPA of 0.743 points, on average.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;\(R^2\)&lt;/code&gt; value is 0.295, which means that nearly 30% of the variation in college GPA can be explained by high school GPA. Neat.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glance&lt;/span&gt;(model_sat_gpa_hs)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1 x 12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC deviance df.residual  nobs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     0.295         0.295 0.622      418. 6.93e-78     1  -943. 1893. 1908.     386.         998  1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;college-gpa--sat--sex&#34;&gt;College GPA ~ SAT + sex&lt;/h4&gt;
&lt;p&gt;Next, we can see how both SAT scores and sex affect variation in college GPA with the following model:&lt;/p&gt;
&lt;p&gt;$$
\text{freshman GPA} = \beta_0 + \beta_1 \text{SAT total} + \beta_2 \text{sex} + \epsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sat_sex &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(gpa_fy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; sat_total &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sex, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_gpa)

&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sat_sex, conf.int &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 3 x 7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value conf.low conf.high&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  -0.0269   0.149      -0.181 8.57e- 1  -0.319     0.265 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 sat_total     0.0255   0.00145    17.6   1.14e-60   0.0227    0.0284&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 sexMale      -0.274    0.0414     -6.62  6.05e-11  -0.355    -0.193&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here, stuff gets interesting. The intercept ($\beta_0$) is once again nonsensical—females with a 0 score on their SAT would have a -0.027 college GPA on average. There&amp;rsquo;s a positive effect with our &lt;code&gt;\(\beta_1\)&lt;/code&gt; (or &lt;code&gt;sat_total&lt;/code&gt;), since controlling for sex, a one percentile point increase in SAT scores is associated with a 0.026 point increase in freshman GPA, on average. If we control for SAT scores, males see an average drop of 0.274 points ($\beta_2$) in their college GPAs.&lt;/p&gt;
&lt;p&gt;The combination of these two variables, however, doesn&amp;rsquo;t boost the model&amp;rsquo;s explanatory power that much. The adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; (which we must look at because we&amp;rsquo;re using more than one explanatory variable) is 0.243, meaning that the model explains a little over 24% of the variation in college GPAs.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glance&lt;/span&gt;(model_sat_sex)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1 x 12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC deviance df.residual  nobs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     0.245         0.243 0.644      162. 1.44e-61     2  -978. 1964. 1983.     414.         997  1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;college-gpa--sat--high-school-gpa--sex&#34;&gt;College GPA ~ SAT + high school GPA + sex&lt;/h4&gt;
&lt;p&gt;Finally we can see what the effect of SAT scores, high school GPA, and sex is on college GPAs all at the same time, using the following model:&lt;/p&gt;
&lt;p&gt;$$
\text{freshman GPA} = \beta_0 + \beta_1 \text{SAT total} + \beta_2 \text{high school GPA} + \beta_3 \text{sex} + \epsilon
$$&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;model_sat_hs_sex &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lm&lt;/span&gt;(gpa_fy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; sat_total &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; gpa_hs &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sex, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sat_gpa)

&lt;span style=&#34;color:#a6e22e&#34;&gt;tidy&lt;/span&gt;(model_sat_hs_sex, conf.int &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TRUE&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 4 x 7&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   term        estimate std.error statistic  p.value conf.low conf.high&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1 (Intercept)  -0.836    0.148       -5.63 2.35e- 8  -1.13     -0.544 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 2 sat_total     0.0158   0.00150     10.5  9.72e-25   0.0129    0.0188&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 3 gpa_hs        0.545    0.0394      13.8  6.61e-40   0.467     0.622 &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 4 sexMale      -0.143    0.0391      -3.66 2.66e- 4  -0.220    -0.0664&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can say the following things about these results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Yet again, the intercept ($\beta_0$) can be safely ignored. Here it means that a female with a 0.0 high school GPA and an SAT score of 0 would have a college GPA of -0.84, on average. That&amp;rsquo;s pretty impossible.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;\(\beta_1\)&lt;/code&gt; coefficient for &lt;code&gt;sat_total&lt;/code&gt; indicates that taking into account high school GPA and sex, a one percentile point increase in a student&amp;rsquo;s SAT score is associated with a 0.016 point increase in their college GPA, on average.&lt;/li&gt;
&lt;li&gt;Controlling for SAT scores and sex, a one point increase in high school GPA is associated with a 0.545 point (this is &lt;code&gt;\(\beta_2\)&lt;/code&gt;) increase in college GPA, on average. This coefficient is lower than the 0.74 point coefficient we found previously. That&amp;rsquo;s because SAT scores and sex soaked up some of high school GPA&amp;rsquo;s explanatory power.&lt;/li&gt;
&lt;li&gt;Taking SAT scores and high school GPAs into account, males have a 0.143 point lower GPA in college, on average (this is &lt;code&gt;\(\beta_3\)&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As always, the adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; shows us how well the model fits overall (again, we have to look at the adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; because we have more than one explanatory variable). In this case, the model explains 36.5% of the variation in college GPA, which is higher than any of the previous models (but not phenomenal, in the end).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;glance&lt;/span&gt;(model_sat_hs_sex)
&lt;span style=&#34;color:#75715e&#34;&gt;## # A tibble: 1 x 12&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC deviance df.residual  nobs&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;##       &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## 1     0.367         0.365 0.590      192. 2.67e-98     3  -890. 1790. 1815.     347.         996  1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;which-model-best-predicts-freshman-gpa-how-do-you-know&#34;&gt;Which model best predicts freshman GPA? How do you know?&lt;/h4&gt;
&lt;p&gt;As you&amp;rsquo;ve learned in previous stats classes, adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; generally shows the strength of a model&amp;rsquo;s fit, or how well the model will predict future values of the outcome variable. If we compare the adjusted &lt;code&gt;\(R^2\)&lt;/code&gt; for each of the models, we see that the &amp;ldquo;best&amp;rdquo; model is the last one.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# The modelsummary() function takes a bunch of different regression models and&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# puts them in a neat side-by-side table. In a normal report or analysis, you&amp;#39;d&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# include all of these once instead of going one by one like we did above.&lt;/span&gt;
&lt;span style=&#34;color:#a6e22e&#34;&gt;modelsummary&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;list&lt;/span&gt;(model_sat_gpa, model_sat_gpa_types, model_sat_gpa_hs,
                  model_sat_sex, model_sat_hs_sex))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th style=&#34;text-align:left;&#34;&gt;   &lt;/th&gt;
   &lt;th style=&#34;text-align:center;&#34;&gt; Model 1 &lt;/th&gt;
   &lt;th style=&#34;text-align:center;&#34;&gt; Model 2 &lt;/th&gt;
   &lt;th style=&#34;text-align:center;&#34;&gt; Model 3 &lt;/th&gt;
   &lt;th style=&#34;text-align:center;&#34;&gt; Model 4 &lt;/th&gt;
   &lt;th style=&#34;text-align:center;&#34;&gt; Model 5 &lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; (Intercept) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.002 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.007 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.091 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -0.027 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -0.836 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.152) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.152) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.118) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.149) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.148) &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; sat_total &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.024 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.026 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.016 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.001) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.001) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.002) &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; sat_verbal &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.025 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.003) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; sat_math &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.022 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.003) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; gpa_hs &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.743 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.545 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.036) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; (0.039) &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; sexMale &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -0.274 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -0.143 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;box-shadow: 0px 1px&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;box-shadow: 0px 1px&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;box-shadow: 0px 1px&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;box-shadow: 0px 1px&#34;&gt;  &lt;/td&gt;
   &lt;td style=&#34;text-align:center;box-shadow: 0px 1px&#34;&gt; (0.041) &lt;/td&gt;
   &lt;td style=&#34;text-align:center;box-shadow: 0px 1px&#34;&gt; (0.039) &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; Num.Obs. &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1000 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1000 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1000 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1000 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1000 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; R2 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.212 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.212 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.295 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.245 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.367 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; R2 Adj. &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.211 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.211 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.295 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.243 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 0.365 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; AIC &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 2004.8 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 2006.4 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1893.0 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1963.8 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1790.2 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; BIC &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 2019.5 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 2026.0 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1907.7 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1983.4 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 1814.8 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; Log.Lik. &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -999.382 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -999.189 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -943.477 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -977.904 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; -890.108 &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td style=&#34;text-align:left;&#34;&gt; F &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 268.270 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 134.244 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 418.071 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 161.762 &lt;/td&gt;
   &lt;td style=&#34;text-align:center;&#34;&gt; 192.141 &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;This is real data about real students, &lt;a href=&#34;https://www.dartmouth.edu/~chance/course/Syllabi/Princeton96/Class12.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;compiled and cleaned by a professor at Dartmouth.&lt;/a&gt; &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Bienvenido/a a R, RStudio y Github</title>
      <link>/example/01-practico/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/example/01-practico/</guid>
      <description>&lt;h2 id=&#34;part-1-the-basics-of-r-and-dplyr&#34;&gt;Part 1: The basics of R and dplyr&lt;/h2&gt;
&lt;p&gt;For this week&amp;rsquo;s problem set, you need to work through a few of RStudio&amp;rsquo;s introductory primers. You&amp;rsquo;ll do these in your browser and type code and see results there.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll learn some of the basics of R, as well as some powerful methods for manipulating data with the &lt;strong&gt;dplyr&lt;/strong&gt; package.&lt;/p&gt;
&lt;p&gt;Complete these primers. It seems like there are a lot, but they&amp;rsquo;re short and go fairly quickly (especially as you get the hang of the syntax). Also, &lt;strong&gt;I have no way of seeing what you do or what you get wrong or right&lt;/strong&gt;, and that&amp;rsquo;s totally fine! If you get stuck and want to skip some (or if it gets too easy), go right ahead and skip them!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Basics&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/1.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visualization Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/1.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Programming Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Work with Data&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/2.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Working with Tibbles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/2.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Isolating Data with dplyr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/2.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Deriving Information with dplyr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Visualize Data&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Exploratory Data Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Bar Charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Histograms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Boxplots and Counts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Scatterplots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Line plots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Overplotting and Big Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/3.8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Customize Your Plots&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tidy Your Data&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.cloud/learn/primers/4.1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Reshape Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;note&#34;&gt;
Recent versions of &lt;strong&gt;tidyr&lt;/strong&gt; have renamed these core functions: &lt;code&gt;gather()&lt;/code&gt; is now &lt;code&gt;pivot_longer()&lt;/code&gt; and &lt;code&gt;spread()&lt;/code&gt; is now &lt;code&gt;pivot_wider()&lt;/code&gt;. The syntax for these &lt;code&gt;pivot_*()&lt;/code&gt; functions is &lt;em&gt;slightly&lt;/em&gt; different from what it was in &lt;code&gt;gather()&lt;/code&gt; and &lt;code&gt;spread()&lt;/code&gt;, so you can&amp;rsquo;t just replace the names. Fortunately, both &lt;code&gt;gather()&lt;/code&gt; and &lt;code&gt;spread()&lt;/code&gt; still work and won&amp;rsquo;t go away for a while, so you can still use them as you learn about reshaping and tidying data. It would be worth learning how the newer &lt;code&gt;pivot_*()&lt;/code&gt; functions work, eventually, though (&lt;a href=&#34;https://tidyr.tidyverse.org/articles/pivot.html&#34;&gt;see here for examples&lt;/a&gt;).
&lt;/div&gt;

&lt;p&gt;The content from these primers comes from the (free and online!) book &lt;a href=&#34;https://r4ds.had.co.nz/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;R for Data Science&lt;/em&gt; by Garrett Grolemund and Hadley Wickham&lt;/a&gt;. I highly recommend the book as a reference and for continuing to learn and use R in the future.&lt;/p&gt;
&lt;h2 id=&#34;part-2-getting-familiar-with-rstudio&#34;&gt;Part 2: Getting familiar with RStudio&lt;/h2&gt;
&lt;p&gt;The RStudio primers you just worked through are a great introduction to writing and running R code, but you typically won&amp;rsquo;t type code in a browser when you work with R. Instead, you&amp;rsquo;ll use a nicer programming environment like RStudio, which lets you type and save code in scripts, run code from those scripts, and see the output of that code, all in the same program.&lt;/p&gt;
&lt;p&gt;To get familiar with RStudio, watch this video (it&amp;rsquo;s from PMAP 8921, but the content still applies here):&lt;/p&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/cnQ-v1UUWyE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2 id=&#34;part-3-rstudio-projects&#34;&gt;Part 3: RStudio Projects&lt;/h2&gt;
&lt;p&gt;One of the most powerful and useful aspects of RStudio is its ability to manage projects.&lt;/p&gt;
&lt;p&gt;When you first open R, it is &amp;ldquo;pointed&amp;rdquo; at some folder on your computer, and anything you do will be relative to that folder. The technical term for this is a &amp;ldquo;working directory.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;When you first open RStudio, look in the area right at the top of the Console pane to see your current working directory. Most likely you&amp;rsquo;ll see something cryptic: &lt;code&gt;~/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/example/working-directory.png&#34; width=&#34;50%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;That tilde sign (&lt;code&gt;~&lt;/code&gt;) is a shortcut that stands for your user directory. On Windows this is &lt;code&gt;C:\Users\your_user_name\&lt;/code&gt;; on macOS this is &lt;code&gt;/Users/your_user_name/&lt;/code&gt;. With the working directory set to &lt;code&gt;~/&lt;/code&gt;, R is &amp;ldquo;pointed&amp;rdquo; at that folder, and anything you save will end up in that folder, and R will expect any data that you load to be there too.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s always best to point R at some other directory. If you don&amp;rsquo;t use RStudio, you need to manually set the working directory to where you want it with &lt;code&gt;setwd()&lt;/code&gt;, and many R scripts in the wild include something like &lt;code&gt;setwd(&amp;quot;C:\\Users\\bill\\Desktop\\Important research project&amp;quot;)&lt;/code&gt; at the beginning to change the directory. &lt;strong&gt;THIS IS BAD THOUGH&lt;/strong&gt; (&lt;a href=&#34;https://www.tidyverse.org/blog/2017/12/workflow-vs-script/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;see here for an explanation&lt;/a&gt;). If you ever move that directory somewhere else, or run the script on a different computer, or share the project with someone, the path will be wrong and nothing will run and you will be sad.&lt;/p&gt;
&lt;p&gt;The best way to deal with working directories with RStudio is to use RStudio Projects. These are special files that RStudio creates for you that end in a &lt;code&gt;.Rproj&lt;/code&gt; extension. When you open one of these special files, a new RStudio instance will open up and be pointed at the correct directory automatically. If you move the folder later or open it on a different computer, it will work just fine and you will not be sad.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://r4ds.had.co.nz/workflow-projects.html#rstudio-projects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Read this super short chapter on RStudio projects to learn how to create and use them&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In general, you can create a new project by going to File &amp;gt; New Project &amp;gt; New Directory &amp;gt; Empty Project, which will create a new folder on your computer that is empty except for a single &lt;code&gt;.Rproj&lt;/code&gt; file. Double click on that file to open an RStudio instance that is pointed at the correct folder.&lt;/p&gt;
&lt;h2 id=&#34;part-4-getting-familiar-with-r-markdown&#34;&gt;Part 4: Getting familiar with R Markdown&lt;/h2&gt;
&lt;p&gt;To ensure that the analysis and graphics you make are reproducible, you&amp;rsquo;ll do the majority of your work in this class using &lt;strong&gt;R Markdown&lt;/strong&gt; files.&lt;/p&gt;
&lt;p&gt;Do the following things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Watch this video:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
&lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://player.vimeo.com/video/178485416?color=428bca&#34; frameborder=&#34;0&#34;  allow=&#34;autoplay; fullscreen&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Skim through the content at these pages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/resource/markdown/&#34;&gt;Using Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/resource/rmarkdown/&#34;&gt;Using R Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-2.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How it Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-3.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Code Chunks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-4.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Inline Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-8.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Basics&lt;/a&gt; (The &lt;a href=&#34;https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R Markdown Reference Guide&lt;/a&gt; is super useful here.)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rmarkdown.rstudio.com/lesson-9.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Output Formats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Watch this video (again, it&amp;rsquo;s from PMAP 8921, but the content works for this class):&lt;/p&gt;
 &lt;div class=&#34;embed-responsive embed-responsive-16by9&#34;&gt;
 &lt;iframe class=&#34;embed-responsive-item&#34; src=&#34;https://www.youtube.com/embed/fT5xI1cmE2c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
 &lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
